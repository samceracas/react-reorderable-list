{"version":3,"sources":["pages/Home.js","../../src/lib/math/index.js","../../src/lib/dom/index.js","../../src/models/list-item.js","../../src/components/reorderable-item.js","../../src/lib/object/index.js","../../src/models/list.js","../../src/controllers/list-controller.js","../../src/components/reorderable-list.js","../../src/components/reorderable-list-group.js","samples/material-ui/nested-lists.js","samples/material-ui/using-lists.js","samples/material-ui/using-ungroupped-list.js","samples/react-bootstrap/nested-lists.js","samples/react-bootstrap/using-lists.js","samples/react-bootstrap/using-ungroupped-list.js","components/examples-list.js","pages/Docs.js","App.js","index.js"],"names":["Box","display","height","margin","textAlign","flexDirection","to","distance","pointA","pointB","xDiff","yDiff","Math","insertBefore","container","referenceElement","newElement","insertAfter","JSXToDOMElement","jsx","htmlString","div","document","createElementFromHTML","ReactDOMServer","isTouchDevice","window","navigator","constructor","props","ListItem","this","cryptoRandomString","length","_defaults","itemIndex","itemData","event","input","x","y","pageY","prevY","e","firstMatch","mouseDown","prevX","touch","down","up","move","click","createRef","inputControl","inputEvents","_inputEvents","passive","targetElement","CustomEvent","bubbles","cancelable","detail","list","Array","previousList","target","targetRect","node","r1","r2","nodeRect","getIntersectingElementOnList","item","styles","dragX","_offset","dragY","pageX","clientX","clientY","listComponent","_itemRef","model","_beforeDragRect","width","_halfHeight","Component","ref","React","_model","element","cloneNode","tokens","path","currentProperty","i","object","ReOrderableItem","defaultProps","drag","itemCopy","component","componentProps","List","_group","get","set","_list","listData","map","index","name","group","targetList","sourceItem","params","arrayMove","groupCopy","sourceListPath","sourceList","sourceListData","instanceID","moveItem","transferItem","filteredItems","closestElement","nodeList","dist","currentDist","getClosestElement","closestElementRect","draggedElementRect","draggedElementAxis","closestRectYAxis","insertFunction","child","onItemDragStart","onItemDragEnd","isEmpty","controller","updateList","ReOrderableList","placeholder","CustomComponent","_onDragExit","_controller","_itemPlaceholder","classList","contains","propTypes","PropTypes","orientation","style","backgroundColor","_currentDraggedItem","_orientationSettings","vertical","axis","size","horizontal","listCopy","onListUpdate","ReOrderableListGroup","listGroup","SyntaxHighlighter","registerLanguage","useStyles","makeStyles","theme","root","maxWidth","palette","background","paper","border","samples","history","useHistory","AppBar","position","Toolbar","Button","color","onClick","push","Container","my","sample","Divider","light","availableFrameworks","components","classes","useState","id","tasks","groups","setGroup","href","rel","gridGap","onListGroupUpdate","newList","key","className","data","ListItemText","primary","Accordion","AccordionSummary","aria-controls","AccordionDetails","language","materialDark","customStyle","todo","setTodo","gap","subheader","ListSubheader","setList","fontSize","marginBottom","fontWeight","lineHeight","ListGroup","minHeight","minWidth","Item","extras","ReactDOM","createPortal","integrity","crossOrigin","head","framework","useParams","docs","App","Docs","Home","render","getElementById"],"mappings":"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","file":"static/js/main.854d852e.chunk.js","sourcesContent":["import { Box } from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function () {\n  return (\n    <Box display='flex' height='100%'>\n      <Box\n        margin='auto'\n        textAlign='center'\n        display='flex'\n        flexDirection='column'\n      >\n        <h4>Below are some examples using different UI frameworks:</h4>\n        <Link to='/docs/material-ui'>Material UI</Link>\n        <Link to='/docs/react-bootstrap'>React Bootstrap</Link>\n\n        <p>More coming soon!</p>\n      </Box>\n    </Box>\n  )\n}\n","/**\r\n * Calculates the distance between two points.\r\n *\r\n * @export\r\n * @param {Object} pointA\r\n * @param {Object} pointB\r\n * @returns {Number}\r\n */\r\nexport function distance(pointA, pointB) {\r\n  const xDiff = pointA.x - pointB.x\r\n  const yDiff = pointA.y - pointB.y\r\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff)\r\n}\r\n","import ReactDOMServer from 'react-dom/server'\r\nimport { distance } from '../math'\r\n\r\n/**\r\n * Inserts an element before the reference element.\r\n *\r\n * @export\r\n * @param {HTMLElement} container\r\n * @param {HTMLElement} referenceElement\r\n * @param {HTMLElement} newElement\r\n */\r\nexport function insertBefore(container, referenceElement, newElement) {\r\n  container.insertBefore(newElement, referenceElement)\r\n}\r\n\r\n/**\r\n * Inserts an element after the reference element.\r\n *\r\n * @export\r\n * @param {HTMLElement} container\r\n * @param {HTMLElement} referenceElement\r\n * @param {HTMLElement} newElement\r\n */\r\nexport function insertAfter(container, referenceElement, newElement) {\r\n  container.insertBefore(newElement, referenceElement.nextSibling)\r\n}\r\n\r\n/**\r\n * Retrieves the closest element\r\n * @param {Array} nodeList\r\n * @param {HTMLElement} targetElement\r\n */\r\nexport function getClosestElement(nodeList, targetElement) {\r\n  let closestElement = nodeList[0]\r\n  let dist = distance(\r\n    closestElement.getBoundingClientRect(),\r\n    targetElement.getBoundingClientRect()\r\n  )\r\n\r\n  nodeList.forEach((element) => {\r\n    const currentDist = distance(\r\n      element.getBoundingClientRect(),\r\n      targetElement.getBoundingClientRect()\r\n    )\r\n    if (currentDist < dist) {\r\n      dist = currentDist\r\n      closestElement = element\r\n    }\r\n  })\r\n  return closestElement\r\n}\r\n\r\n/**\r\n * Generates a DOM element from an html string\r\n *\r\n * @export\r\n * @source https://stackoverflow.com/a/494348\r\n * @param {String} htmlString\r\n * @returns {HTMLElement}\r\n */\r\nexport function createElementFromHTML(htmlString) {\r\n  var div = document.createElement('div')\r\n  div.innerHTML = htmlString.trim()\r\n\r\n  // Change this to div.childNodes to support multiple top-level nodes\r\n  return div.firstElementChild\r\n}\r\n\r\n/**\r\n * Converts a JSX element to a DOM Element\r\n * @param {JSX.Element} jsx\r\n * @return {HTMLElement}\r\n */\r\nexport function JSXToDOMElement(jsx) {\r\n  return createElementFromHTML(ReactDOMServer.renderToStaticMarkup(jsx))\r\n}\r\n\r\n/**\r\n * Checks if two rectangles intersect.\r\n *\r\n * @param {*} r1\r\n * @param {*} r2\r\n * @returns {Boolean}\r\n */\r\nfunction intersectRect(r1, r2) {\r\n  return !(\r\n    r2.left > r1.right ||\r\n    r2.right < r1.left ||\r\n    r2.top > r1.bottom ||\r\n    r2.bottom < r1.top\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the first intersecting element on the node list.\r\n * @param {HTMLElement} target\r\n * @param {NodeList} list\r\n * @return {HTMLElement|null}\r\n */\r\nexport function getIntersectingElementOnList(target, list) {\r\n  const targetRect = target.getBoundingClientRect()\r\n  list = list.filter((node) => {\r\n    const nodeRect = node.getBoundingClientRect()\r\n    return intersectRect(nodeRect, targetRect)\r\n  })\r\n\r\n  if (list.length <= 0) return null\r\n\r\n  return list[0]\r\n}\r\n\r\n/**\r\n * Detects if the current device has a touch screen.\r\n *\r\n * @source https://www.labnol.org/code/19616-detect-touch-screen-javascript\r\n * @export\r\n * @returns {Boolean}\r\n */\r\nexport function isTouchDevice() {\r\n  return (\r\n    'ontouchstart' in window ||\r\n    navigator.MaxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0\r\n  )\r\n}\r\n","import cryptoRandomString from 'crypto-random-string'\n\n/**\n * A model representing our list item.\n *\n * @export\n * @class ListItem\n * @author Ezequiel Sam Ceracas\n * @version 1.0.0\n */\nexport default class ListItem {\n  static _defaults = {\n    itemIndex: 0,\n    itemData: null\n  }\n\n  /**\n   * Creates an instance of ListItem.\n   * @param {*} props\n   * @memberof ListItem\n   */\n  constructor(props) {\n    props = { ...ListItem._defaults, ...props }\n    this._itemIndex = props.itemIndex\n    this._itemData = props.itemData\n    this._instanceID =\n      'item-instance-' +\n      (props._instanceID\n        ? props._instanceID\n        : cryptoRandomString({ length: 8 }))\n  }\n\n  /**\n   * Returns the instance id for this item.\n   *\n   * @type {String}\n   * @readonly\n   * @memberof ListItem\n   */\n  get instanceID() {\n    return this._instanceID\n  }\n\n  /**\n   * Returns the data for this item.\n   *\n   * @type {Object}\n   * @readonly\n   * @memberof ListItem\n   */\n  get data() {\n    return this._itemData\n  }\n\n  /**\n   * Returns the index for this item on the list.\n   *\n   * @type {Number}\n   * @readonly\n   * @memberof ListItem\n   */\n  get index() {\n    return this._itemIndex\n  }\n\n  /**\n   * Sets the data for this item.\n   *\n   * @type {Object}\n   * @memberof ListItem\n   */\n  set data(value) {\n    this._itemData = value\n  }\n\n  /**\n   * Sets the index for this item on the list.\n   *\n   * @type {Number}\n   * @memberof ListItem\n   */\n  set index(value) {\n    this._itemIndex = value\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport React, { Component, createRef } from 'react'\nimport {\n  getIntersectingElementOnList,\n  isTouchDevice,\n  JSXToDOMElement\n} from '../lib/dom'\nimport ListItem from '../models/list-item'\nimport styles from '../css/reorderable-item.css'\nimport { distance } from '../lib/math'\n\n/**\n * A wrapper for reorderable items. Handles drag and drop logic.\n *\n * @class ReOrderableItem\n * @author Ezequiel Sam Ceracas\n * @version 1.0.0\n * @extends {Component}\n */\nexport default class ReOrderableItem extends Component {\n  /**\n   * Default properties for this component.\n   *\n   * @static\n   * @memberof ReOrderableItem\n   */\n  static defaultProps = {\n    drag: (item) => {\n      const itemCopy = item.clonedItemElement\n      itemCopy.style.width = `${item.rect.width}px`\n      itemCopy.style.height = `${item.rect.height}px`\n      itemCopy.style.zIndex = '9000'\n      return itemCopy\n    },\n    component: `div`,\n    componentProps: null,\n    itemIndex: 0,\n    itemData: null\n  }\n\n  /**\n   * Creates an instance of ReOrderableItem.\n   *\n   * @param {*} props\n   * @memberof ReOrderableItem\n   */\n  constructor(props) {\n    super(props)\n\n    this._beforeDragRect = null\n    this._halfWidth = null\n    this._halfHeight = null\n\n    this._offset = {\n      x: 0,\n      y: 0\n    }\n\n    this._dragTrigger = {\n      mouseDown: false,\n      prevX: 0,\n      prevY: 0\n    }\n\n    this._inputEvents = {\n      touch: {\n        down: 'touchstart',\n        up: 'touchend',\n        move: 'touchmove'\n      },\n      click: {\n        down: 'mousedown',\n        up: 'mouseup',\n        move: 'mousemove'\n      }\n    }\n\n    this._itemRef = null\n\n    this._isDragging = false\n    this._draggedElement = null\n    this._overlappingList = null\n    this._clonedItem = null\n\n    this._model = new ListItem(props)\n\n    this._onItemMouseMove = this._onItemMouseMove.bind(this)\n    this._onItemMouseUp = this._onItemMouseUp.bind(this)\n    this._onItemMouseDown = this._onItemMouseDown.bind(this)\n\n    this._handleDrag = this._handleDrag.bind(this)\n    this._handleDragStart = this._handleDragStart.bind(this)\n    this._handleDragEnd = this._handleDragEnd.bind(this)\n    this._itemRef = createRef()\n  }\n\n  /**\n   * Returns the instance id for this item.\n   *\n   * @type {String}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get instanceID() {\n    return this._model.instanceID\n  }\n\n  /**\n   * Returns the ```ListItem``` model for this component.\n   *\n   * @type {ListItem}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get model() {\n    return this._model\n  }\n\n  /**\n   * Returns the HTMLElement of the dragged item. This becomes ```null``` when no drag and drop action is happening.\n   *\n   * @type {HTMLElement|null}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get draggedElement() {\n    if (!this._draggedElement) {\n      const element = this.props.drag?.(this)\n      this._draggedElement = React.isValidElement(element)\n        ? JSXToDOMElement(element)\n        : element\n    }\n    return this._draggedElement\n  }\n\n  /**\n   * Returns the list component this item is part of.\n   *\n   * @type {ReOrderableList}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get listComponent() {\n    return this.props.list\n  }\n\n  /**\n   * Returns the overlapping list element. This becomes ```null``` when there are no overlapping lists.\n   *\n   * @type {HTMLElement|null}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get overlappingListElement() {\n    return this._overlappingList\n  }\n\n  /**\n   * Clones and returns a copy of the item element. Will not reclone once there's an instantiated instance of the clone.\n   *\n   * @type {Node}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get clonedItemElement() {\n    if (!this._clonedItem) {\n      this._clonedItem = this._itemRef.cloneNode(true)\n    }\n    return this._clonedItem\n  }\n\n  /**\n   * Returns the bounding client rect of the item element.\n   *\n   * @type {ClientRect}\n   * @readonly\n   * @memberof ReOrderableItem\n   */\n  get rect() {\n    return this._beforeDragRect\n  }\n\n  /**\n   * Component mount hook.\n   *\n   * @memberof ReOrderableItem\n   */\n  componentDidMount() {\n    const inputControl = isTouchDevice() ? 'touch' : 'click'\n    const inputEvents = this._inputEvents[inputControl]\n\n    document.addEventListener(inputEvents.move, this._handleDrag, {\n      passive: false\n    })\n    document.addEventListener(inputEvents.up, this._handleDragEnd)\n    this._itemRef.addEventListener(inputEvents.down, this._onItemMouseDown)\n    this._itemRef.addEventListener(inputEvents.move, this._onItemMouseMove)\n    this._itemRef.addEventListener(inputEvents.up, this._onItemMouseUp)\n  }\n\n  /**\n   * Component unmount hook.\n   *\n   * @memberof ReOrderableItem\n   */\n  componentWillUnmount() {\n    const inputControl = isTouchDevice() ? 'touch' : 'click'\n    const inputEvents = this._inputEvents[inputControl]\n    document.removeEventListener(inputEvents.move, this._handleDrag, {\n      passive: false\n    })\n    document.removeEventListener(inputEvents.up, this._handleDragEnd)\n    this._itemRef.removeEventListener(inputEvents.down, this._onItemMouseDown)\n    this._itemRef.removeEventListener(inputEvents.move, this._onItemMouseMove)\n    this._itemRef.removeEventListener(inputEvents.up, this._onItemMouseUp)\n  }\n\n  /**\n   * Dispatches a custom event.\n   *\n   * @private\n   * @param {HTMLElement} targetElement\n   * @param {String} event\n   * @param {Object} detail\n   * @memberof ReOrderableItem\n   */\n  _dispatchCustomEvent(targetElement, event, detail) {\n    targetElement.dispatchEvent(\n      // eslint-disable-next-line no-undef\n      new CustomEvent(event, {\n        bubbles: true,\n        cancelable: true,\n        detail\n      })\n    )\n  }\n\n  /**\n   * Checks for overlapping list containers. Will dispatch the following events:\n   *  * dragexit - Dispatched when exiting a list container.\n   *  * dragenter - Dispatched when entering a list container.\n   *  * dragover - Dispatches when the dragged element is moved within the list container.\n   *\n   * @private\n   * @returns {void}\n   * @memberof ReOrderableItem\n   */\n  _checkOverlappingElements() {\n    const list = Array.prototype.slice.call(this._groupListElements)\n    const previousList = this._overlappingList\n\n    this._overlappingList = getIntersectingElementOnList(\n      this.draggedElement,\n      list\n    )\n\n    if (previousList && !this._overlappingList) {\n      this._dispatchCustomEvent(previousList, 'dragexit', {\n        item: this\n      })\n    }\n\n    if (!this._overlappingList) {\n      if (!document.body.classList.contains(styles.noDrop)) {\n        document.body.classList.add(styles.noDrop)\n      }\n      return\n    }\n\n    if (\n      !previousList ||\n      (previousList && previousList !== this._overlappingList)\n    ) {\n      if (previousList && previousList !== this._overlappingList) {\n        this._dispatchCustomEvent(previousList, 'dragexit', {\n          item: this\n        })\n      }\n\n      this._dispatchCustomEvent(this._overlappingList, 'dragenter', {\n        item: this\n      })\n      if (document.body.classList.contains(styles.noDrop)) {\n        document.body.classList.remove(styles.noDrop)\n      }\n    }\n\n    this._dispatchCustomEvent(this._overlappingList, 'dragover', {\n      item: this\n    })\n  }\n\n  _handleDrag(event) {\n    if (!this._isDragging) return\n    if (isTouchDevice()) event.preventDefault()\n    const input = isTouchDevice() ? event.changedTouches[0] : event\n    const dragX = input.pageX - this._halfWidth - this._offset.x\n    const dragY = input.pageY - this._halfHeight - this._offset.y\n\n    this.draggedElement.style.left = `${dragX}px`\n    this.draggedElement.style.top = `${dragY}px`\n\n    this._checkOverlappingElements()\n\n    this.props.onItemDrag?.({\n      item: this,\n      dragX,\n      dragY,\n      pageX: input.pageX,\n      pageY: input.pageY,\n      clientX: input.clientX,\n      clientY: input.clientY\n    })\n  }\n\n  _handleDragEnd(event) {\n    if (!this._isDragging) return\n    const input = isTouchDevice() ? event.changedTouches[0] : event\n\n    if (document.body.classList.contains(styles.noDrop)) {\n      document.body.classList.remove(styles.noDrop)\n    }\n\n    if (this._overlappingList) {\n      this._overlappingList.dispatchEvent(\n        // eslint-disable-next-line no-undef\n        new CustomEvent('drop', {\n          bubbles: true,\n          cancelable: true,\n          detail: {\n            item: this,\n            list: this.listComponent\n          }\n        })\n      )\n    }\n\n    this.props.onItemDragEnd?.({\n      item: this,\n      pageX: input.pageX,\n      pageY: input.pageY,\n      clientX: input.clientX,\n      clientY: input.clientY\n    })\n\n    this._overlappingList = null\n    this._isDragging = false\n    if (this._itemRef) {\n      this._itemRef.style.display = ''\n      this._itemRef.hidden = false\n    }\n\n    this._clonedItem = null\n    this._draggedElement?.remove()\n    this._draggedElement = null\n  }\n\n  _handleDragStart(event) {\n    if (this._isDragging) return\n\n    document.getSelection().empty()\n\n    const input = isTouchDevice() ? event.changedTouches[0] : event\n    this._clonedItem = null\n    this._beforeDragRect = this._itemRef.getBoundingClientRect()\n    this._groupListElements = document.querySelectorAll(\n      `.${this.listComponent.model.groupID}`\n    )\n\n    if (!this._halfWidth && !this._halfHeight) {\n      this._halfWidth = this._beforeDragRect.width / 2\n      this._halfHeight = this._beforeDragRect.height / 2\n    }\n\n    this._offset = {\n      x: input.clientX - this._beforeDragRect.left - this._halfWidth,\n      y: input.clientY - this._beforeDragRect.top - this._halfHeight\n    }\n\n    const dragX = input.pageX - this._halfWidth - this._offset.x\n    const dragY = input.pageY - this._halfHeight - this._offset.y\n\n    this._isDragging = true\n\n    this.draggedElement.style.position = 'absolute'\n    this.draggedElement.style.left = `${dragX}px`\n    this.draggedElement.style.top = `${dragY}px`\n\n    document.body.appendChild(this.draggedElement)\n\n    this._itemRef.style.display = 'none'\n    this._itemRef.hidden = true\n\n    this.props.onItemDragStart?.({\n      item: this,\n      dragX,\n      dragY,\n      pageX: input.pageX,\n      pageY: input.pageY,\n      clientX: input.clientX,\n      clientY: input.clientY\n    })\n\n    this._checkOverlappingElements()\n  }\n\n  /**\n   * Mouse move event handler.\n   *\n   * @private\n   * @memberof ReOrderableItem\n   */\n  _onItemMouseMove = (event) => {\n    const input = isTouchDevice() ? event.changedTouches[0] : event\n\n    if (this._dragTrigger.mouseDown && !this._isDragging) {\n      const dist = distance(\n        {\n          x: input.pageX,\n          y: input.pageY\n        },\n        {\n          x: this._dragTrigger.prevX,\n          y: this._dragTrigger.prevY\n        }\n      )\n      if (dist >= 1) {\n        this._dragTrigger.mouseDown = false\n        this._handleDragStart(event)\n      }\n    }\n  }\n\n  /**\n   * Mouse up event handler.\n   *\n   * @private\n   * @memberof ReOrderableItem\n   */\n  _onItemMouseUp = (event) => {\n    if (this._dragTrigger.mouseDown) {\n      this._dragTrigger.mouseDown = false\n    }\n  }\n\n  /**\n   * Mouse down event handler.\n   *\n   * @private\n   * @memberof ReOrderableItem\n   */\n  _onItemMouseDown = (event) => {\n    const input = isTouchDevice() ? event.changedTouches[0] : event\n    const firstMatch = document\n      .elementsFromPoint(input.clientX, input.clientY)\n      .find((e) => e.classList.contains('ui-reorderable-item'))\n    if (firstMatch !== this._itemRef || this._dragTrigger.mouseDown) return\n    this._dragTrigger.mouseDown = true\n    this._dragTrigger.prevX = input.pageX\n    this._dragTrigger.prevY = input.pageY\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {import(\"react\").ReactElement}\n   * @memberof ReOrderableItem\n   */\n  render() {\n    const Component = this.props.component\n    this._model = new ListItem(this.props)\n\n    return (\n      <Component\n        {...this.props.componentProps}\n        className={[\n          'ui-reorderable-item',\n          styles.uiItem,\n          this.listComponent.instanceID,\n          this.instanceID,\n          this.props.componentProps?.className\n        ].join(' ')}\n        ref={(ref) => (this._itemRef = ref)}\n      >\n        {React.Children.only(this.props.children)}\n      </Component>\n    )\n  }\n}\n","/**\n * Returns the value of the property based on the object path.\n *\n * @export\n * @param {String} path Path to the property you want to access.\n * @param {Object} object The source object.\n * @returns {*}\n */\nexport function get(path, object) {\n  path = path + ''\n  const tokens = path.split('.')\n  let currentProperty = object\n\n  for (let i = 0; i < tokens.length; i++) {\n    currentProperty = currentProperty[tokens[i]]\n  }\n  return currentProperty\n}\n\n/**\n * Sets the value of the object based on the path.\n *\n * @export\n * @source https://stackoverflow.com/a/10934946\n * @param {String} path Path to the property you want to access.\n * @param {Object} object The source object.\n * @param {*} newValue\n */\nexport function set(path, object, newValue) {\n  path = path + ''\n  path = path.split('.')\n  while (path.length > 1) object = object[path.shift()]\n  return (object[path.shift()] = newValue)\n}\n","import cryptoRandomString from 'crypto-random-string'\nimport { get, set } from '../lib/object'\nimport ListItem from './list-item'\n\n/**\n * A model representing our list.\n *\n * @export\n * @class List\n * @author Ezequiel Sam Ceracas\n * @version 1.0.0\n */\nexport default class List {\n  static _defaults = {\n    name: '',\n    list: [],\n    path: 0,\n    group: null\n  }\n\n  constructor(props) {\n    props = { ...List._defaults, ...props }\n\n    this._name = props.name\n    this._list = props.list\n    this._path = props.path\n    this._group = props.group\n    this._listItems = null\n    this._groupID = 'list-group-' + props.name.replace(/ /g, '-')\n    this._instanceID =\n      'list-instance-' +\n      (props._instanceID\n        ? props._instanceID\n        : cryptoRandomString({ length: 8 }))\n  }\n\n  /**\n   * Returns the list group that this list is part of. For lists without a group, this will return ```null```.\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {null|Array}\n   */\n  get group() {\n    return this._group\n  }\n\n  /**\n   * Returns the group id for this list.\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {String}\n   */\n  get groupID() {\n    return this._groupID\n  }\n\n  /**\n   * Returns the instance id for this reorderable list.\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {String}\n   */\n  get instanceID() {\n    return this._instanceID\n  }\n\n  /**\n   * Returns the raw array of data found within the list.\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {Array}\n   */\n  get listData() {\n    return this._group ? get(this._path, this._group) : this._list\n  }\n\n  /**\n   * Returns an array of ```ListItem``` contained within the list.\n   *\n   * @readonly\n   * @memberof List\n   */\n  get listItems() {\n    if (!this._listItems) {\n      this._listItems = this.listData.map(\n        (data, index) =>\n          new ListItem({\n            itemData: data,\n            itemIndex: index\n          })\n      )\n    }\n    return this._listItems\n  }\n\n  /**\n   * Returns the object path of this list from the list group. Defaults to ```0``` when this list is ungrouped.\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {Number}\n   */\n  get path() {\n    return this._path\n  }\n\n  /**\n   * Sets the list group that this list is part of.\n   *\n   * @public\n   * @memberof List\n   * @type {null|Array}\n   */\n  set group(value) {\n    this._group = value\n  }\n\n  /**\n   * Sets the new value of the list\n   *\n   * @public\n   * @readonly\n   * @memberof List\n   * @type {Array}\n   */\n  set listData(value) {\n    this._group ? set(this._path, this._group, value) : (this._list = value)\n    this._listItems = this.listData.map(\n      (data, index) =>\n        new ListItem({\n          itemData: data,\n          itemIndex: index\n        })\n    )\n  }\n\n  /**\n   * Sets the object path of this list from the list group.\n   *\n   * @public\n   * @memberof List\n   * @type {Number}\n   */\n  set path(value) {\n    this._path = value\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport arrayMove from 'array-move'\nimport { set } from '../lib/object'\nimport List from '../models/list'\n\n/**\n * Controller for managing lists.\n *\n * @export\n * @class ListController\n * @author Ezequiel Sam Ceracas\n * @version 1.0.0\n */\nexport default class ListController {\n  /**\n   * Creates an instance of ListController.\n   * @param {*} props\n   * @memberof ListController\n   */\n  constructor(props) {\n    this._model = new List(props)\n  }\n\n  /**\n   * Returns the ```List``` model for this controller.\n   *\n   * @readonly\n   * @memberof ListController\n   */\n  get model() {\n    return this._model\n  }\n\n  /**\n   * Moves an item to the target index.\n   *\n   * @param {*} sourceItem\n   * @param {*} targetIndex\n   * @memberof ListController\n   */\n  moveItem(sourceItem, targetIndex) {\n    let targetList = [...this.model.listData]\n    const itemIndex = sourceItem.index\n    targetList = arrayMove(targetList, itemIndex, targetIndex)\n    let params = [targetList, this.model.path]\n    if (this.model.group) {\n      const groupCopy = [...this.model.group]\n      set(this.model.path, groupCopy, targetList)\n      params = [groupCopy]\n    }\n    return params\n  }\n\n  /**\n   * Transfers an item to this list.\n   *\n   * @param {*} sourceItem\n   * @param {*} [sourceList]\n   * @param {*} targetIndex\n   * @memberof ListController\n   */\n  transferItem(sourceItem, sourceList, targetIndex) {\n    let targetList = [...this.model.listData]\n    const itemData = sourceItem.data\n    const itemIndex = sourceItem.index\n\n    const sourceListPath = sourceList.path\n    // make a copy of the group\n    const groupCopy = [...this.model.group]\n    // remove the source item from its list\n    const sourceListData = sourceList.listData.filter(\n      (item, index) => index !== itemIndex\n    )\n    // add the item to the new list\n    targetList.push(itemData)\n    // move the newly added item to the target index\n    targetList = arrayMove(targetList, targetList.length - 1, targetIndex)\n    // set the new source and target list\n    set(sourceListPath, groupCopy, sourceListData)\n    set(this.model.path, groupCopy, targetList)\n\n    // return the group\n    return [groupCopy]\n  }\n\n  /**\n   * Transfers an item from one list to another or reorders the items if the ```sourceList``` is null.\n   *\n   * @param {ListItem} sourceItem\n   * @param {Number} targetIndex\n   * @param {List} sourceList\n   * @memberof ListController\n   */\n  updateList(sourceItem, sourceList, targetIndex) {\n    sourceList = !sourceList ? this.model : sourceList\n    if (this.model.instanceID === sourceList.instanceID) {\n      return this.moveItem(sourceItem, targetIndex)\n    }\n    return this.transferItem(sourceItem, sourceList, targetIndex)\n  }\n}\n","/* eslint-disable no-unused-expressions */\r\nimport isEmpty from 'is-empty'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component, ReactElement } from 'react'\r\nimport {\r\n  JSXToDOMElement,\r\n  getClosestElement,\r\n  insertAfter,\r\n  insertBefore\r\n} from '../lib/dom'\r\nimport ReOrderableItem from './reorderable-item'\r\nimport ListController from '../controllers/list-controller'\r\n\r\n/**\r\n * A container for reorderable list items. This contains the main logic for reordering and updating items.\r\n *\r\n * @class ReOrderableList\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n * @extends {Component}\r\n */\r\nexport default class ReOrderableList extends Component {\r\n  /**\r\n   * Define prop types.\r\n   *\r\n   * @static\r\n   * @memberof ReOrderableList\r\n   */\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    list: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n      PropTypes.object\r\n    ]).isRequired,\r\n    componentProps: PropTypes.object,\r\n    orientation: PropTypes.oneOf(['vertical', 'horizontal']).isRequired,\r\n    placeholder: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Object),\r\n      PropTypes.instanceOf(ReactElement)\r\n    ]).isRequired,\r\n    group: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n  }\r\n\r\n  /**\r\n   * Default properties for this component.\r\n   *\r\n   * @static\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  static defaultProps = {\r\n    name: '',\r\n    component: `div`,\r\n    list: [],\r\n    path: 0,\r\n    group: null,\r\n    orientation: 'vertical',\r\n    placeholder: (item) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: `${item.rect.width}px`,\r\n            height: `${item.rect.height}px`,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.1)'\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Contains the currently dragged item.\r\n   *\r\n   * @static\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   * @type {ReOrderableItem}\r\n   */\r\n  static _currentDraggedItem = null\r\n\r\n  /**\r\n   * Settings for list orientation.\r\n   *\r\n   * @static\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  static _orientationSettings = {\r\n    vertical: {\r\n      axis: 'y',\r\n      size: 'height'\r\n    },\r\n    horizontal: {\r\n      axis: 'x',\r\n      size: 'width'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of ReOrderableList.\r\n   *\r\n   * @param {*} props\r\n   * @memberof ReOrderableList\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._itemPlaceholder = null\r\n    this._controller = new ListController(props)\r\n  }\r\n\r\n  /**\r\n   * Returns the instance id for this list.\r\n   *\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get instanceID() {\r\n    return this.controller.model.instanceID\r\n  }\r\n\r\n  /**\r\n   * Returns the group id for this list.\r\n   *\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get groupID() {\r\n    return this.controller.model.groupID\r\n  }\r\n\r\n  /**\r\n   * Returns the controller for this component.\r\n   *\r\n   * @type {ListController}\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get controller() {\r\n    return this._controller\r\n  }\r\n\r\n  /**\r\n   * Returns the model for this component.\r\n   *\r\n   * @type {List}\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get model() {\r\n    return this._controller.model\r\n  }\r\n\r\n  /**\r\n   * Returns the HTMLElement of the list.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {HTMLElement}\r\n   */\r\n  get element() {\r\n    return this._listRef\r\n  }\r\n\r\n  /**\r\n   * Returns the currently dragged item.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {ReOrderableItem}\r\n   */\r\n  get currentDraggedItem() {\r\n    return ReOrderableList._currentDraggedItem\r\n  }\r\n\r\n  /**\r\n   * Returns the item placeholder.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {HTMLElement}\r\n   */\r\n  get itemPlaceholder() {\r\n    if (!this.currentDraggedItem) return null\r\n    if (!this._itemPlaceholder) {\r\n      const element = this.props.placeholder?.(this.currentDraggedItem)\r\n      this._itemPlaceholder = React.isValidElement(element)\r\n        ? JSXToDOMElement(element)\r\n        : element\r\n\r\n      if (!this._itemPlaceholder.classList.contains('ui-reorderable-item')) {\r\n        this._itemPlaceholder.classList.add('ui-reorderable-item')\r\n      }\r\n      if (!this._itemPlaceholder.classList.contains('item-placeholder')) {\r\n        this._itemPlaceholder.classList.add('item-placeholder')\r\n      }\r\n    }\r\n    return this._itemPlaceholder\r\n  }\r\n\r\n  /**\r\n   * Returns the orientation settings.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  get orientationSettings() {\r\n    return ReOrderableList._orientationSettings[this.props.orientation]\r\n  }\r\n\r\n  /**\r\n   * Initializes the children. Only looks for instances of ```ReOrderableItem``` and passes props to each instance.\r\n   *\r\n   * @private\r\n   * @returns\r\n   * @memberof ReOrderableList\r\n   * @returns {Array<import(\"react\").ReactElement>}\r\n   */\r\n  _initializeChildren() {\r\n    let index = 0\r\n    const childrenWithProps = React.Children.map(\r\n      this.props.children,\r\n      (child) => {\r\n        if (React.isValidElement(child) && child.type === ReOrderableItem) {\r\n          const props = {\r\n            list: this,\r\n            onItemDragStart: (item) => {\r\n              this._onItemDragStart(item)\r\n              if (child.props.onItemDragStart) {\r\n                child.props.onItemDragStart(item)\r\n              }\r\n            },\r\n            onItemDragEnd: (item) => {\r\n              this._onItemDragEnd(item)\r\n              if (child.props.onItemDragEnd) {\r\n                child.props.onItemDragEnd(item)\r\n              }\r\n            },\r\n            itemData: isEmpty(child.props.itemData)\r\n              ? this.model.listData[index]\r\n              : child.props.itemData,\r\n            itemIndex: isEmpty(child.props.itemIndex)\r\n              ? index\r\n              : child.props.itemIndex\r\n          }\r\n          index++\r\n          return React.cloneElement(child, props)\r\n        }\r\n        return child\r\n      }\r\n    )\r\n\r\n    return childrenWithProps\r\n  }\r\n\r\n  /**\r\n   * Updates the list with the new ```ReOrderableItem```.\r\n   *\r\n   * @private\r\n   * @param {ReOrderableItem} item\r\n   * @param {Number} targetIndex\r\n   * @memberof ReOrderableList\r\n   */\r\n  _updateList(item, targetIndex) {\r\n    const params = this.controller.updateList(\r\n      item.model,\r\n      item.listComponent.model,\r\n      targetIndex\r\n    )\r\n    this.props.onListUpdate?.apply(this, params)\r\n  }\r\n\r\n  /**\r\n   * Initializes drag data.\r\n   *\r\n   * @private\r\n   * @param {ReOrderableItem} item\r\n   * @memberof ReOrderableList\r\n   */\r\n  _initDragData(item) {\r\n    ReOrderableList._currentDraggedItem = item\r\n  }\r\n\r\n  /**\r\n   * Resets the drag data.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _resetDragData() {\r\n    ReOrderableList._currentDraggedItem = null\r\n    this._removePlaceholders()\r\n    this._itemPlaceholder = null\r\n  }\r\n\r\n  /**\r\n   * Removes all placeholders from every list container.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _removePlaceholders() {\r\n    const placeholder = document.querySelector(\r\n      '.ui-reorderable-list .ui-reorderable-item.item-placeholder'\r\n    )\r\n    placeholder?.remove()\r\n  }\r\n\r\n  /**\r\n   * Item drag start event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onItemDragStart = ({ item }) => {\r\n    this._initDragData(item)\r\n  }\r\n\r\n  /**\r\n   * Item drag end event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onItemDragEnd = () => {\r\n    this._resetDragData()\r\n  }\r\n\r\n  /**\r\n   * Drag exit event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDragExit = () => {\r\n    this._removePlaceholders()\r\n  }\r\n\r\n  /**\r\n   * Drag over event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDragOver = (event) => {\r\n    if (!this.itemPlaceholder) return\r\n    const { item } = event.detail\r\n    event.stopPropagation()\r\n    this.itemPlaceholder.remove()\r\n\r\n    const filteredItems = Array.prototype.slice.call(\r\n      this.element.querySelectorAll(\r\n        `.ui-reorderable-item.${this.instanceID}:not([hidden])`\r\n      )\r\n    )\r\n\r\n    if (filteredItems.length <= 0) {\r\n      this.element.appendChild(this.itemPlaceholder)\r\n      return\r\n    }\r\n\r\n    const closestElement = getClosestElement(filteredItems, item.draggedElement)\r\n\r\n    const closestElementRect = closestElement.getBoundingClientRect()\r\n    const draggedElementRect = item.draggedElement.getBoundingClientRect()\r\n    const draggedElementAxis = Math.floor(\r\n      draggedElementRect[this.orientationSettings.axis]\r\n    )\r\n    const closestRectYAxis = Math.floor(\r\n      closestElementRect[this.orientationSettings.axis] +\r\n        closestElementRect[this.orientationSettings.size] / 2\r\n    )\r\n    const insertFunction =\r\n      closestRectYAxis > draggedElementAxis ? insertBefore : insertAfter\r\n    insertFunction(this.element, closestElement, this.itemPlaceholder)\r\n  }\r\n\r\n  /**\r\n   * Drop event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDrop = (event) => {\r\n    const { item } = event.detail\r\n    event.stopPropagation()\r\n\r\n    const filteredItems = Array.prototype.slice.call(\r\n      this.element.querySelectorAll(`.ui-reorderable-item:not([hidden])`)\r\n    )\r\n\r\n    const index = filteredItems.findIndex((item) =>\r\n      item.classList.contains('item-placeholder')\r\n    )\r\n\r\n    this._updateList(item, index)\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   *\r\n   * @returns {import(\"react\").ReactElement}\r\n   * @memberof ReOrderableList\r\n   */\r\n  render() {\r\n    const CustomComponent = this.props.component\r\n    this._controller = new ListController(this.props)\r\n\r\n    return (\r\n      <CustomComponent\r\n        {...this.props.componentProps}\r\n        ref={(ref) => (this._listRef = ref)}\r\n        className={[\r\n          'ui-reorderable-list',\r\n          this.instanceID,\r\n          this.groupID,\r\n          this.props.componentProps?.className\r\n        ].join(' ')}\r\n        onDrop={this._onDrop}\r\n        onDragOver={this._onDragOver}\r\n        onDragExit={this._onDragExit}\r\n      >\r\n        {this._initializeChildren()}\r\n      </CustomComponent>\r\n    )\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react'\nimport { get, set } from '../lib/object'\nimport isEmpty from 'is-empty'\nimport ReOrderableList from './reorderable-list'\n\n/**\n * A wrapper for several interacting ```ReOrderableList``` components.\n *\n * @class ReOrderableListGroup\n * @author Ezequiel Sam Ceracas\n * @version 1.0.0\n * @extends {Component}\n */\nexport default class ReOrderableListGroup extends Component {\n  static defaultProps = {\n    name: 'list',\n    listGroup: []\n  }\n\n  /**\n   * List update handler.\n   *\n   * @memberof ReOrderableListGroup\n   */\n  _onListUpdate = (newList, path) => {\n    const listCopy = [...this.props.group]\n    set(path, listCopy, newList)\n    this.props.onListGroupUpdate?.(listCopy)\n  }\n\n  /**\n   * Initializes the children. Only detects ```ReOrderableList``` components and passes special properties to them.\n   *\n   * @private\n   * @returns {Array<ReactElement>}\n   * @memberof ReOrderableListGroup\n   */\n  _initializeChildren() {\n    let index = 0\n    const childrenWithProps = React.Children.map(\n      this.props.children,\n      (child) => {\n        if (React.isValidElement(child) && child.type === ReOrderableList) {\n          const props = {\n            name: this.props.name,\n            list: isEmpty(child.props.list)\n              ? get(index, this.props.group)\n              : child.props.list,\n            path: isEmpty(child.props.path) ? index : child.props.path,\n            onListUpdate: this._onListUpdate,\n            group: this.props.group\n          }\n          index++\n          return React.cloneElement(child, props)\n        }\n        return child\n      }\n    )\n    return childrenWithProps\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {import(\"react\").ReactElement}\n   * @memberof ReOrderableListGroup\n   */\n  render() {\n    return <React.Fragment>{this._initializeChildren()}</React.Fragment>\n  }\n}\n","import React, { useState } from 'react'\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport { Box, ListSubheader } from '@material-ui/core'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { makeStyles } from '@material-ui/core/styles'\n\nSyntaxHighlighter.registerLanguage('jsx', jsx)\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid gray'\n  }\n}))\n\nexport default function () {\n  const classes = useStyles()\n\n  const [todo, setTodo] = useState([\n    {\n      id: 1,\n      name: 'In Progress',\n      tasks: [\n        { id: 1, name: 'This task is in progress.' },\n        { id: 2, name: 'This one too.' },\n        { id: 3, name: 'Hello World!' }\n      ]\n    },\n    {\n      id: 2,\n      name: 'Complete',\n      tasks: [\n        { id: 1, name: 'This task is completed.' },\n        { id: 2, name: 'Im a task!' }\n      ]\n    }\n  ])\n  return (\n    <>\n      <h4>Nested Lists</h4>\n\n      <p>The categories \"In Progress\" and \"Complete\" can be reordered as well as its children.</p>\n\n      <ReOrderableList\n        name='categories'\n        list={todo}\n        orientation='horizontal'\n        onListUpdate={(newList) => setTodo(newList)}\n        component={Box}\n        componentProps={{\n          style: { display: 'flex', gap: '20px' }\n        }}\n      >\n        {todo.map((list, index) => {\n          return (\n            <ReOrderableItem\n              key={`cat-${index}`}\n              componentProps={{ className: classes.root }}\n            >\n              <ReOrderableList\n                name='todo-list'\n                group={todo}\n                path={`${index}.tasks`}\n                onListUpdate={(newList) => setTodo(newList)}\n                component={List}\n                componentProps={{\n                  subheader: (\n                    <ListSubheader component='div' id='nested-list-subheader'>\n                      {list.name}\n                    </ListSubheader>\n                  )\n                }}\n              >\n                {list.tasks.map((data, index) => (\n                  <ReOrderableItem key={`item-${index}`}>\n                    <ListItem>\n                      <ListItemText primary={data.name} />\n                    </ListItem>\n                  </ReOrderableItem>\n                ))}\n              </ReOrderableList>\n            </ReOrderableItem>\n          )\n        })}\n      </ReOrderableList>\n\n      <Accordion>\n        <AccordionSummary aria-controls='panel2a-content' id='panel2a-header'>\n          Show source\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box width='100%'>\n            <SyntaxHighlighter\n              language='jsx'\n              style={materialDark}\n              customStyle={{ display: 'block' }}\n            >\n              {`import React, { useState } from \"react\";\nimport { ReOrderableItem, ReOrderableList } from \"react-reorderable-list\";\nimport { Box, ListSubheader } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      border: \"1px solid gray\",\n   },\n}));\nexport default function () {\n   const classes = useStyles();\n   const [todo, setTodo] = useState([\n      {\n         id: 1,\n         name: \"In Progress\",\n         tasks: [\n            { id: 1, name: \"This task is in progress.\" },\n            { id: 2, name: \"This one too.\" },\n            { id: 3, name: \"Hello World!\" },\n         ],\n      },\n      {\n         id: 2,\n         name: \"Complete\",\n         tasks: [\n            { id: 1, name: \"This task is completed.\" },\n            { id: 2, name: \"Im a task!\" },\n         ],\n      },\n   ]);\n   return (\n      <ReOrderableList\n         name=\"categories\"\n         list={todo}\n         orientation=\"horizontal\"\n         onListUpdate={(newList) => setTodo(newList)}\n         component={Box}\n         componentProps={{\n            style: { display: \"flex\", gap: \"20px\" },\n         }}>\n         {todo.map((list, index) => {\n            return (\n               <ReOrderableItem\n                  key={\\`cat-\\${index}\\`}\n                  componentProps={{ className: classes.root }}>\n                  <ReOrderableList\n                     name=\"todo-list\"\n                     group={todo}\n                     path={\\`\\${index}.tasks\\`}\n                     onListUpdate={(newList) => setTodo(newList)}\n                     component={List}\n                     componentProps={{\n                        subheader: (\n                           <ListSubheader\n                              component=\"div\"\n                              id=\"nested-list-subheader\">\n                              {list.name}\n                           </ListSubheader>\n                        ),\n                     }}>\n                     {list.tasks.map((data, index) => (\n                        <ReOrderableItem key={\\`item-\\${index}\\`}>\n                          <ListItem>\n                           <ListItemText primary={data.name} />\n                         </ListItem>\n                        </ReOrderableItem>\n                     ))}\n                  </ReOrderableList>\n               </ReOrderableItem>\n            );\n         })}\n      </ReOrderableList>\n   );\n}\n`}\n            </SyntaxHighlighter>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  )\n}\n","import React, { useState } from 'react'\r\nimport {\r\n  ReOrderableItem,\r\n  ReOrderableList,\r\n  ReOrderableListGroup\r\n} from 'react-reorderable-list'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport { Box } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid gray'\r\n  }\r\n}))\r\n\r\nexport default function () {\r\n  const classes = useStyles()\r\n  //sample data\r\n  const [groups, setGroup] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'test',\r\n      tasks: [\r\n        { id: 1, name: 'Test' },\r\n        { id: 2, name: 'Hello' },\r\n        { id: 3, name: 'World!' }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'test2',\r\n      tasks: [\r\n        { id: 1, name: 'Item' },\r\n        { id: 2, name: 'Name' }\r\n      ]\r\n    }\r\n  ])\r\n  return (\r\n    <>\r\n      {' '}\r\n      <h4>\r\n        Using the{' '}\r\n        <a\r\n          href='https://material-ui.com/components/lists/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          List\r\n        </a>{' '}\r\n        component\r\n      </h4>\r\n      <Box display='flex' gridGap='10px'>\r\n        <ReOrderableListGroup\r\n          name='uniqueGroupName'\r\n          group={groups}\r\n          onListGroupUpdate={(newList) => setGroup(newList)}\r\n        >\r\n          {groups.map((list, index) => (\r\n            <ReOrderableList\r\n              key={`list-${index}`}\r\n              path={`${index}.tasks`}\r\n              component={List}\r\n              componentProps={{\r\n                className: classes.root\r\n              }}\r\n            >\r\n              {list.tasks.map((data, index) => (\r\n                <ReOrderableItem key={`item-${index}`} component={ListItem}>\r\n                  <ListItemText primary={data.name} />\r\n                </ReOrderableItem>\r\n              ))}\r\n            </ReOrderableList>\r\n          ))}\r\n        </ReOrderableListGroup>\r\n      </Box>\r\n      <Accordion>\r\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\r\n          Show source\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Box width='100%'>\r\n            <SyntaxHighlighter\r\n              language='jsx'\r\n              style={materialDark}\r\n              customStyle={{ display: 'block' }}\r\n            >\r\n              {`import React, { useState } from \"react\";\r\nimport {\r\n   ReOrderableItem,\r\n   ReOrderableList,\r\n   ReOrderableListGroup,\r\n} from \"react-reorderable-list\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid gray\",\r\n   },\r\n}));\r\nexport default function () {\r\n   const classes = useStyles();\r\n   const [groups, setGroup] = useState([\r\n      {\r\n         id: 1,\r\n         name: \"test\",\r\n         tasks: [\r\n            { id: 1, name: \"Test\" },\r\n            { id: 2, name: \"Hello\" },\r\n            { id: 3, name: \"World!\" },\r\n         ],\r\n      },\r\n      {\r\n         id: 2,\r\n         name: \"test2\",\r\n         tasks: [\r\n            { id: 1, name: \"Item\" },\r\n            { id: 2, name: \"Name\" },\r\n         ],\r\n      },\r\n   ]);\r\n   return (\r\n      <Box display=\"flex\" gridGap=\"10px\">\r\n         <ReOrderableListGroup\r\n            name=\"uniqueGroupName\"\r\n            group={groups}\r\n            onListGroupUpdate={(newList) => setGroup(newList)}>\r\n            {groups.map((list, index) => (\r\n               <ReOrderableList\r\n                  key={\\`list-\\${index}\\`}\r\n                  path={\\`\\${index}.tasks\\`}\r\n                  component={List}\r\n                  componentProps={{\r\n                     className: classes.root,\r\n                  }}>\r\n                  {list.tasks.map((data, index) => (\r\n                     <ReOrderableItem\r\n                        key={\\`item-\\${index}\\`}\r\n                        component={ListItem}>\r\n                        <ListItemText primary={data.name} />\r\n                     </ReOrderableItem>\r\n                  ))}\r\n               </ReOrderableList>\r\n            ))}\r\n         </ReOrderableListGroup>\r\n      </Box>\r\n   );\r\n}\r\n`}\r\n            </SyntaxHighlighter>\r\n          </Box>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport { Box } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid gray'\r\n  }\r\n}))\r\nexport default function () {\r\n  const classes = useStyles()\r\n  //sample data\r\n  const [list, setList] = useState([\r\n    { id: 1, name: 'This' },\r\n    { id: 2, name: 'list' },\r\n    { id: 2, name: 'is restricted' },\r\n    { id: 2, name: 'to itself' }\r\n  ])\r\n  return (\r\n    <>\r\n      {' '}\r\n      <h4>\r\n        Ungroupped List\r\n      </h4>\r\n      <Box display='flex' gridGap='10px'>\r\n        <ReOrderableList\r\n          //The unique identifier for this list. Should be unique from other lists and list groups.\r\n          name='list2'\r\n          //your list data\r\n          list={list}\r\n          //the list update callback\r\n          onListUpdate={(newList) => setList(newList)}\r\n          component={List}\r\n          componentProps={{\r\n            className: classes.root\r\n          }}\r\n        >\r\n          {list.map((data, index) => (\r\n            <ReOrderableItem key={`item-${index}`} component={ListItem}>\r\n              <ListItemText primary={data.name} />\r\n            </ReOrderableItem>\r\n          ))}\r\n        </ReOrderableList>\r\n      </Box>\r\n      <Accordion>\r\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\r\n          Show source\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Box width='100%'>\r\n            <SyntaxHighlighter\r\n              language='jsx'\r\n              style={materialDark}\r\n              customStyle={{ display: 'block' }}\r\n            >\r\n              {`import React, { useState } from \"react\";\r\nimport { ReOrderableItem, ReOrderableList } from \"react-reorderable-list\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid gray\",\r\n   },\r\n}));\r\nexport default function () {\r\n   const classes = useStyles();\r\n   const [list, setList] = useState([\r\n      { id: 1, name: \"This\" },\r\n      { id: 2, name: \"list\" },\r\n      { id: 2, name: \"is restricted\" },\r\n      { id: 2, name: \"to itself\" },\r\n   ]);\r\n   return (\r\n      <Box display=\"flex\" gridGap=\"10px\">\r\n         <ReOrderableList\r\n            //The unique identifier for this list. Should be unique from other lists and list groups.\r\n            name=\"list2\"\r\n            //your list data\r\n            list={list}\r\n            //the list update callback\r\n            onListUpdate={(newList) => setList(newList)}\r\n            component={List}\r\n            componentProps={{\r\n               className: classes.root,\r\n            }}>\r\n            {list.map((data, index) => (\r\n               <ReOrderableItem key={\\`item-\\${index}\\`} component={ListItem}>\r\n                  <ListItemText primary={data.name} />\r\n               </ReOrderableItem>\r\n            ))}\r\n         </ReOrderableList>\r\n      </Box>\r\n   );\r\n}\r\n`}\r\n            </SyntaxHighlighter>\r\n          </Box>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport { Box } from '@material-ui/core'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nexport default function () {\n  const styleReset = {\n    fontSize: 'revert',\n    marginBottom: 'revert',\n    fontWeight: 'revert',\n    lineHeight: 'revert'\n  }\n  const [todo, setTodo] = useState([\n    {\n      id: 1,\n      name: 'In Progress',\n      tasks: [\n        { id: 1, name: 'This task is in progress.' },\n        { id: 2, name: 'This one too.' },\n        { id: 3, name: 'Hello World!' }\n      ]\n    },\n    {\n      id: 2,\n      name: 'Complete',\n      tasks: [\n        { id: 1, name: 'This task is completed.' },\n        { id: 2, name: 'Im a task!' }\n      ]\n    }\n  ])\n  return (\n    <>\n      <h4 style={styleReset}>Nested Lists</h4>\n\n      <p>\n        The categories \"In Progress\" and \"Complete\" can be reordered as well as\n        its children.\n      </p>\n\n      <ReOrderableList\n        name='categories'\n        list={todo}\n        orientation='horizontal'\n        onListUpdate={(newList) => setTodo(newList)}\n        componentProps={{\n          style: { display: 'flex', gap: '20px' }\n        }}\n      >\n        {todo.map((list, index) => {\n          return (\n            <ReOrderableItem key={`cat-${index}`}>\n              <ReOrderableList\n                name='todo-list'\n                group={todo}\n                path={`${index}.tasks`}\n                onListUpdate={(newList) => setTodo(newList)}\n                component={ListGroup}\n              >\n                <h6>{list.name}</h6>\n                {list.tasks.map((data, index) => (\n                  <ReOrderableItem key={`item-${index}`}>\n                    <ListGroup.Item>{data.name}</ListGroup.Item>\n                  </ReOrderableItem>\n                ))}\n              </ReOrderableList>\n            </ReOrderableItem>\n          )\n        })}\n      </ReOrderableList>\n\n      <Accordion>\n        <AccordionSummary aria-controls='panel2a-content' id='panel2a-header'>\n          Show source\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box width='100%'>\n            <SyntaxHighlighter\n              language='jsx'\n              style={materialDark}\n              customStyle={{ display: 'block' }}\n            >\n              {`import React, { useState } from 'react'\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\n\nexport default function () {\n  const [todo, setTodo] = useState([\n    {\n      id: 1,\n      name: 'In Progress',\n      tasks: [\n        { id: 1, name: 'This task is in progress.' },\n        { id: 2, name: 'This one too.' },\n        { id: 3, name: 'Hello World!' }\n      ]\n    },\n    {\n      id: 2,\n      name: 'Complete',\n      tasks: [\n        { id: 1, name: 'This task is completed.' },\n        { id: 2, name: 'Im a task!' }\n      ]\n    }\n  ])\n  return (\n    <ReOrderableList\n      name='categories'\n      list={todo}\n      orientation='horizontal'\n      onListUpdate={(newList) => setTodo(newList)}\n      componentProps={{\n        style: { display: 'flex', gap: '20px' }\n      }}\n    >\n      {todo.map((list, index) => {\n        return (\n          <ReOrderableItem key={\\`cat-\\${index}\\`}>\n            <ReOrderableList\n              name='todo-list'\n              group={todo}\n              path={\\`\\${index}.tasks\\`}\n              onListUpdate={(newList) => setTodo(newList)}\n              component={ListGroup}\n            >\n              <h6>{list.name}</h6>\n              {list.tasks.map((data, index) => (\n                <ReOrderableItem key={\\`item-\\${index}\\`}>\n                  <ListGroup.Item>{data.name}</ListGroup.Item>\n                </ReOrderableItem>\n              ))}\n            </ReOrderableList>\n          </ReOrderableItem>\n        )\n      })}\n    </ReOrderableList>\n  )\n}\n`}\n            </SyntaxHighlighter>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  ReOrderableItem,\n  ReOrderableList,\n  ReOrderableListGroup\n} from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport { Box } from '@material-ui/core'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nexport default function () {\n  const styleReset = {\n    fontSize: 'revert',\n    marginBottom: 'revert',\n    fontWeight: 'revert',\n    lineHeight: 'revert'\n  }\n  //sample data\n  const [groups, setGroup] = useState([\n    {\n      id: 1,\n      name: 'test',\n      tasks: [\n        { id: 1, name: 'Test' },\n        { id: 2, name: 'Hello' },\n        { id: 3, name: 'World!' }\n      ]\n    },\n    {\n      id: 2,\n      name: 'test2',\n      tasks: [\n        { id: 1, name: 'Item' },\n        { id: 2, name: 'Name' }\n      ]\n    }\n  ])\n  return (\n    <>\n      {' '}\n      <h4 style={styleReset}>\n        Using the{' '}\n        <a\n          href='https://react-bootstrap.github.io/components/list-group/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          ListGroup\n        </a>{' '}\n        component\n      </h4>\n      <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n        <ReOrderableListGroup\n          name='uniqueGroupName'\n          group={groups}\n          onListGroupUpdate={(newList) => setGroup(newList)}\n        >\n          {groups.map((list, index) => (\n            <ReOrderableList\n              key={`list-${index}`}\n              path={`${index}.tasks`}\n              component={ListGroup}\n              componentProps={{\n                style: { minHeight: '200px', minWidth: '100px' }\n              }}\n            >\n              {list.tasks.map((data, index) => (\n                <ReOrderableItem key={`item-${index}`}>\n                  <ListGroup.Item>{data.name}</ListGroup.Item>\n                </ReOrderableItem>\n              ))}\n            </ReOrderableList>\n          ))}\n        </ReOrderableListGroup>\n      </div>\n      <Accordion>\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n          Show source\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box width='100%'>\n            <SyntaxHighlighter\n              language='jsx'\n              style={materialDark}\n              customStyle={{ display: 'block' }}\n            >\n              {`import React, { useState } from 'react'\nimport {\n  ReOrderableItem,\n  ReOrderableList,\n  ReOrderableListGroup\n} from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\n\nexport default function () {\n  const [groups, setGroup] = useState([\n    {\n      id: 1,\n      name: 'test',\n      tasks: [\n        { id: 1, name: 'Test' },\n        { id: 2, name: 'Hello' },\n        { id: 3, name: 'World!' }\n      ]\n    },\n    {\n      id: 2,\n      name: 'test2',\n      tasks: [\n        { id: 1, name: 'Item' },\n        { id: 2, name: 'Name' }\n      ]\n    }\n  ])\n  return (\n    <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n      <ReOrderableListGroup\n        name='uniqueGroupName'\n        group={groups}\n        onListGroupUpdate={(newList) => setGroup(newList)}\n      >\n        {groups.map((list, index) => (\n          <ReOrderableList\n            key={\\`list-\\${index}\\`}\n            path={\\`\\${index}.tasks\\`}\n            component={ListGroup}\n            componentProps={{\n              style: { minHeight: '200px', minWidth: '100px' }\n            }}\n          >\n            {list.tasks.map((data, index) => (\n              <ReOrderableItem key={\\`item-\\${index}\\`}>\n                <ListGroup.Item>{data.name}</ListGroup.Item>\n              </ReOrderableItem>\n            ))}\n          </ReOrderableList>\n        ))}\n      </ReOrderableListGroup>\n    </div>\n  )\n}\n`}\n            </SyntaxHighlighter>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport { Box } from '@material-ui/core'\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\n\nSyntaxHighlighter.registerLanguage('jsx', jsx)\n\nexport default function () {\n  const styleReset = {\n    fontSize: 'revert',\n    marginBottom: 'revert',\n    fontWeight: 'revert',\n    lineHeight: 'revert'\n  }\n  //sample data\n  const [list, setList] = useState([\n    { id: 1, name: 'This' },\n    { id: 2, name: 'list' },\n    { id: 2, name: 'is restricted' },\n    { id: 2, name: 'to itself' }\n  ])\n  return (\n    <>\n      {' '}\n      <h4 style={styleReset}>Ungroupped List</h4>\n      <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n        <ReOrderableList\n          //The unique identifier for this list. Should be unique from other lists and list groups.\n          name='list2'\n          //your list data\n          list={list}\n          //the list update callback\n          onListUpdate={(newList) => setList(newList)}\n          component={ListGroup}\n        >\n          {list.map((data, index) => (\n            <ReOrderableItem key={`item-${index}`}>\n              <ListGroup.Item>{data.name}</ListGroup.Item>\n            </ReOrderableItem>\n          ))}\n        </ReOrderableList>\n      </div>\n      <Accordion>\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\n          Show source\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box width='100%'>\n            <SyntaxHighlighter\n              language='jsx'\n              style={materialDark}\n              customStyle={{ display: 'block' }}\n            >\n              {`import React, { useState } from 'react'\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\nimport { ListGroup } from 'react-bootstrap'\n\nexport default function () {\n  const [list, setList] = useState([\n    { id: 1, name: 'This' },\n    { id: 2, name: 'list' },\n    { id: 2, name: 'is restricted' },\n    { id: 2, name: 'to itself' }\n  ])\n  return (\n    <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n      <ReOrderableList\n        //The unique identifier for this list. Should be unique from other lists and list groups.\n        name='list2'\n        //your list data\n        list={list}\n        //the list update callback\n        onListUpdate={(newList) => setList(newList)}\n        component={ListGroup}\n      >\n        {list.map((data, index) => (\n          <ReOrderableItem key={\\`item-\\${index}\\`}>\n            <ListGroup.Item>{data.name}</ListGroup.Item>\n          </ReOrderableItem>\n        ))}\n      </ReOrderableList>\n    </div>\n  )\n}\n`}\n            </SyntaxHighlighter>\n          </Box>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport { Box, Container, Divider } from '@material-ui/core'\nimport 'react-reorderable-list/dist/index.css'\n\nexport default function (props) {\n  const samples = props.samples || []\n  let history = useHistory()\n  const homeClick = () => {\n    history.push('/')\n  }\n  return (\n    <>\n      <AppBar position='static'>\n        <Toolbar>\n          <Button color='inherit' onClick={homeClick}>\n            Home\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Container>\n        <Box my={3}>\n          <Box my={3}>\n            {samples.map((sample) => {\n              const Component = sample;\n              return (\n                <>\n                  <Divider light style={{ margin: '25px 0' }} />\n                  <Component />\n                </>\n              )\n            })}\n          </Box>\n        </Box>\n      </Container>\n    </>\n  )\n}\n","import { useParams } from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport MaterialNestedLists from '../samples/material-ui/nested-lists'\nimport MaterialUsingLists from '../samples/material-ui/using-lists'\nimport MaterialUsingUngrouppedList from '../samples/material-ui/using-ungroupped-list'\n\nimport ReactBootstrapNestedLists from '../samples/react-bootstrap/nested-lists'\nimport ReactBootstrapUsingLists from '../samples/react-bootstrap/using-lists'\nimport ReactBootstrapUsingUngrouppedList from '../samples/react-bootstrap/using-ungroupped-list'\nimport ExamplesList from '../components/examples-list'\n\nconst availableFrameworks = {\n  'material-ui': {\n    components: [\n      MaterialUsingLists,\n      MaterialNestedLists,\n      MaterialUsingUngrouppedList\n    ]\n  },\n  'react-bootstrap': {\n    components: [\n      ReactBootstrapUsingLists,\n      ReactBootstrapNestedLists,\n      ReactBootstrapUsingUngrouppedList\n    ],\n    extras: () => {\n      return ReactDOM.createPortal(\n        <link\n          rel='stylesheet'\n          href='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css'\n          integrity='sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk'\n          crossOrigin='anonymous'\n        ></link>,\n        document.head\n      )\n    }\n  }\n}\n\nexport default function () {\n  const { framework } = useParams()\n  const docs = availableFrameworks[framework]\n  if (!docs) return <div>404 not found!</div>\n  return (\n    <>\n      {docs.extras && docs.extras()}\n      <ExamplesList samples={docs.components} />\n    </>\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Docs from './pages/Docs'\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/docs/:framework'>\n          <Docs />\n        </Route>\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}