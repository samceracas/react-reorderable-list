{"version":3,"sources":["pages/Home.js","pages/react-bootstrap/index.js","../../src/lib/dom/index.js","../../src/models/list-item.js","../../src/components/reorderable-item.js","../../src/lib/object/index.js","../../src/models/list.js","../../src/controllers/list-controller.js","../../src/components/reorderable-list.js","../../src/components/reorderable-list-group.js","pages/material-ui/samples/using-lists.js","pages/material-ui/samples/nested-lists.js","pages/material-ui/samples/using-ungroupped-list.js","pages/material-ui/index.js","pages/ant-design/index.js","App.js","index.js"],"names":["Box","display","height","margin","textAlign","to","props","insertBefore","container","referenceElement","newElement","insertAfter","JSXToDOMElement","jsx","htmlString","div","document","createElementFromHTML","ReactDOMServer","constructor","ListItem","this","cryptoRandomString","length","_defaults","itemIndex","itemData","super","event","dragX","_offset","dragY","item","pageX","pageY","clientX","clientY","CSS","CustomEvent","bubbles","cancelable","detail","list","listComponent","_itemRef","model","_beforeDragRect","width","x","y","_halfHeight","_onMouseMove","bind","_onMouseUp","createRef","_model","element","React","cloneNode","componentDidMount","componentWillUnmount","_dispatchCustomEvent","targetElement","_checkOverlappingElements","previousList","target","targetRect","node","r1","r2","nodeRect","getIntersectingElementOnList","render","Component","ref","get","path","object","tokens","currentProperty","i","set","newValue","ReOrderableItem","defaultProps","drag","itemCopy","component","componentProps","List","_group","listData","map","data","index","_list","name","group","moveItem","sourceItem","targetIndex","targetList","params","arrayMove","groupCopy","transferItem","sourceList","sourceListPath","sourceListData","updateList","instanceID","filteredItems","querySelectorAll","closestElement","nodeList","xDiff","yDiff","dist","Math","currentDist","getClosestElement","closestElementRect","draggedElementRect","draggedElementAxis","orientationSettings","closestRectYAxis","insertFunction","controller","_controller","ReOrderableList","_itemPlaceholder","classList","contains","_initializeChildren","child","onItemDragStart","onItemDragEnd","isEmpty","_updateList","_initDragData","_resetDragData","_removePlaceholders","placeholder","CustomComponent","_listRef","_onDragExit","propTypes","PropTypes","orientation","style","backgroundColor","_currentDraggedItem","_orientationSettings","vertical","axis","size","horizontal","newList","listCopy","onListUpdate","ReOrderableListGroup","listGroup","SyntaxHighlighter","registerLanguage","useStyles","makeStyles","theme","root","maxWidth","palette","background","paper","border","classes","useState","id","tasks","groups","setGroup","href","rel","gridGap","onListGroupUpdate","key","className","ListItemText","primary","Accordion","AccordionSummary","aria-controls","AccordionDetails","language","materialDark","customStyle","todo","setTodo","gap","subheader","ListSubheader","setList","history","useHistory","AppBar","position","Toolbar","Button","color","onClick","push","Container","my","Divider","light","App","Home","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d1efa709.chunk.js","sourcesContent":["import { Box } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function () {\r\n  return (\r\n    <Box display='flex' height='100%'>\r\n      <Box margin='auto' textAlign='center'>\r\n        <h4>Below are some examples using different UI frameworks:</h4>\r\n        <Link to='/material-ui'>Material UI</Link>\r\n\r\n        <p>More coming soon!</p>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function(props) {\r\n    return <></>\r\n}","import ReactDOMServer from 'react-dom/server'\r\n\r\n/**\r\n * Inserts an element before the reference element.\r\n *\r\n * @export\r\n * @param {HTMLElement} container\r\n * @param {HTMLElement} referenceElement\r\n * @param {HTMLElement} newElement\r\n */\r\nexport function insertBefore(container, referenceElement, newElement) {\r\n  container.insertBefore(newElement, referenceElement)\r\n}\r\n\r\n/**\r\n * Inserts an element after the reference element.\r\n *\r\n * @export\r\n * @param {HTMLElement} container\r\n * @param {HTMLElement} referenceElement\r\n * @param {HTMLElement} newElement\r\n */\r\nexport function insertAfter(container, referenceElement, newElement) {\r\n  container.insertBefore(newElement, referenceElement.nextSibling)\r\n}\r\n\r\n/**\r\n * Retrieves the closest element\r\n * @param {Array} nodeList\r\n * @param {HTMLElement} targetElement\r\n */\r\nexport function getClosestElement(nodeList, targetElement) {\r\n  let closestElement = nodeList[0]\r\n  let xDiff =\r\n    nodeList[0].getBoundingClientRect().x -\r\n    targetElement.getBoundingClientRect().x\r\n  let yDiff =\r\n    nodeList[0].getBoundingClientRect().y -\r\n    targetElement.getBoundingClientRect().y\r\n  let dist = Math.sqrt(xDiff * xDiff + yDiff * yDiff)\r\n\r\n  nodeList.forEach((element) => {\r\n    xDiff =\r\n      element.getBoundingClientRect().x -\r\n      targetElement.getBoundingClientRect().x\r\n    yDiff =\r\n      element.getBoundingClientRect().y -\r\n      targetElement.getBoundingClientRect().y\r\n    const currentDist = Math.sqrt(xDiff * xDiff + yDiff * yDiff)\r\n    if (currentDist < dist) {\r\n      dist = currentDist\r\n      closestElement = element\r\n    }\r\n  })\r\n  return closestElement\r\n}\r\n\r\n/**\r\n * Generates a DOM element from an html string\r\n *\r\n * @export\r\n * @source https://stackoverflow.com/a/494348\r\n * @param {String} htmlString\r\n * @returns {HTMLElement}\r\n */\r\nexport function createElementFromHTML(htmlString) {\r\n  var div = document.createElement('div')\r\n  div.innerHTML = htmlString.trim()\r\n\r\n  // Change this to div.childNodes to support multiple top-level nodes\r\n  return div.firstElementChild\r\n}\r\n\r\n/**\r\n * Converts a JSX element to a DOM Element\r\n * @param {JSX.Element} jsx\r\n * @return {HTMLElement}\r\n */\r\nexport function JSXToDOMElement(jsx) {\r\n  return createElementFromHTML(ReactDOMServer.renderToStaticMarkup(jsx))\r\n}\r\n\r\n/**\r\n * Checks if two rectangles intersect.\r\n *\r\n * @param {*} r1\r\n * @param {*} r2\r\n * @returns {Boolean}\r\n */\r\nfunction intersectRect(r1, r2) {\r\n  return !(\r\n    r2.left > r1.right ||\r\n    r2.right < r1.left ||\r\n    r2.top > r1.bottom ||\r\n    r2.bottom < r1.top\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the first intersecting element on the node list.\r\n * @param {HTMLElement} target\r\n * @param {NodeList} list\r\n * @return {HTMLElement|null}\r\n */\r\nexport function getIntersectingElementOnList(target, list) {\r\n  const targetRect = target.getBoundingClientRect()\r\n  list = [...list]\r\n  list = list.filter((node) => {\r\n    const nodeRect = node.getBoundingClientRect()\r\n    return intersectRect(nodeRect, targetRect)\r\n  })\r\n\r\n  if (list.length <= 0) return null\r\n\r\n  return list[0]\r\n}\r\n","import cryptoRandomString from 'crypto-random-string'\r\n\r\n/**\r\n * A model representing our list item.\r\n *\r\n * @export\r\n * @class ListItem\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n */\r\nexport default class ListItem {\r\n  static _defaults = {\r\n    itemIndex: 0,\r\n    itemData: null\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of ListItem.\r\n   * @param {*} props\r\n   * @memberof ListItem\r\n   */\r\n  constructor(props) {\r\n    props = { ...ListItem._defaults, ...props }\r\n    this._itemIndex = props.itemIndex\r\n    this._itemData = props.itemData\r\n    this._instanceID =\r\n      'item-instance-' +\r\n      (props._instanceID\r\n        ? props._instanceID\r\n        : cryptoRandomString({ length: 8 }))\r\n  }\r\n\r\n  /**\r\n   * Returns the instance id for this item.\r\n   *\r\n   * @type {String}\r\n   * @readonly\r\n   * @memberof ListItem\r\n   */\r\n  get instanceID() {\r\n    return this._instanceID\r\n  }\r\n\r\n  /**\r\n   * Returns the data for this item.\r\n   *\r\n   * @type {Object}\r\n   * @readonly\r\n   * @memberof ListItem\r\n   */\r\n  get data() {\r\n    return this._itemData\r\n  }\r\n\r\n  /**\r\n   * Returns the index for this item on the list.\r\n   *\r\n   * @type {Number}\r\n   * @readonly\r\n   * @memberof ListItem\r\n   */\r\n  get index() {\r\n    return this._itemIndex\r\n  }\r\n\r\n  /**\r\n   * Sets the data for this item.\r\n   *\r\n   * @type {Object}\r\n   * @memberof ListItem\r\n   */\r\n  set data(value) {\r\n    this._itemData = value\r\n  }\r\n\r\n  /**\r\n   * Sets the index for this item on the list.\r\n   *\r\n   * @type {Number}\r\n   * @memberof ListItem\r\n   */\r\n  set index(value) {\r\n    this._itemIndex = value\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport React, { Component, createRef } from 'react'\r\nimport { getIntersectingElementOnList, JSXToDOMElement } from '../lib/dom'\r\nimport ListItem from '../models/list-item'\r\nimport CSS from '../css/reorderable-item.css'\r\n\r\n/**\r\n * A wrapper for reorderable items. Handles drag and drop logic.\r\n * This partially uses the HTML drag and drop API but the rest of the logic is handled through mouse API.\r\n *\r\n * @class ReOrderableItem\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n * @extends {Component}\r\n */\r\nexport default class ReOrderableItem extends Component {\r\n  /**\r\n   * Default properties for this component.\r\n   *\r\n   * @static\r\n   * @memberof ReOrderableItem\r\n   */\r\n  static defaultProps = {\r\n    drag: (item) => {\r\n      const itemCopy = item.clonedItemElement\r\n      itemCopy.style.width = `${item.rect.width}px`\r\n      itemCopy.style.height = `${item.rect.height}px`\r\n      itemCopy.style.zIndex = '9000'\r\n      return itemCopy\r\n    },\r\n    component: `div`,\r\n    componentProps: null,\r\n    itemIndex: 0,\r\n    itemData: null\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of ReOrderableItem.\r\n   *\r\n   * @param {*} props\r\n   * @memberof ReOrderableItem\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._beforeDragRect = null\r\n    this._halfWidth = null\r\n    this._halfHeight = null\r\n\r\n    this._offset = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n\r\n    this._itemRef = null\r\n\r\n    this._isDragging = false\r\n    this._draggedElement = null\r\n    this._overlappingList = null\r\n    this._clonedItem = null\r\n\r\n    this._model = new ListItem(props)\r\n\r\n    this._onMouseMove = this._onMouseMove.bind(this)\r\n    this._onMouseUp = this._onMouseUp.bind(this)\r\n    this._itemRef = createRef()\r\n  }\r\n\r\n  /**\r\n   * Returns the instance id for this item.\r\n   *\r\n   * @type {String}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get instanceID() {\r\n    return this._model.instanceID\r\n  }\r\n\r\n  /**\r\n   * Returns the ```ListItem``` model for this component.\r\n   *\r\n   * @type {ListItem}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get model() {\r\n    return this._model\r\n  }\r\n\r\n  /**\r\n   * Returns the HTMLElement of the dragged item. This becomes ```null``` when no drag and drop action is happening.\r\n   *\r\n   * @type {HTMLElement|null}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get draggedElement() {\r\n    if (!this._draggedElement) {\r\n      const element = this.props.drag?.(this)\r\n      this._draggedElement = React.isValidElement(element)\r\n        ? JSXToDOMElement(element)\r\n        : element\r\n    }\r\n    return this._draggedElement\r\n  }\r\n\r\n  /**\r\n   * Returns the list component this item is part of.\r\n   *\r\n   * @type {ReOrderableList}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get listComponent() {\r\n    return this.props.list\r\n  }\r\n\r\n  /**\r\n   * Returns the overlapping list element. This becomes ```null``` when there are no overlapping lists.\r\n   *\r\n   * @type {HTMLElement|null}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get overlappingListElement() {\r\n    return this._overlappingList\r\n  }\r\n\r\n  /**\r\n   * Clones and returns a copy of the item element. Will not reclone once there's an instantiated instance of the clone.\r\n   *\r\n   * @type {Node}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get clonedItemElement() {\r\n    if (!this._clonedItem) {\r\n      this._clonedItem = this._itemRef.cloneNode(true)\r\n    }\r\n    return this._clonedItem\r\n  }\r\n\r\n  /**\r\n   * Returns the bounding client rect of the item element.\r\n   *\r\n   * @type {ClientRect}\r\n   * @readonly\r\n   * @memberof ReOrderableItem\r\n   */\r\n  get rect() {\r\n    return this._beforeDragRect\r\n  }\r\n\r\n  /**\r\n   * Component mount hook.\r\n   *\r\n   * @memberof ReOrderableItem\r\n   */\r\n  componentDidMount() {\r\n    document.addEventListener('mousemove', this._onMouseMove)\r\n    document.addEventListener('mouseup', this._onMouseUp)\r\n  }\r\n\r\n  /**\r\n   * Component unmount hook.\r\n   *\r\n   * @memberof ReOrderableItem\r\n   */\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousemove', this._onMouseMove)\r\n    document.removeEventListener('mouseup', this._onMouseUp)\r\n  }\r\n\r\n  /**\r\n   * Dispatches a custom event.\r\n   *\r\n   * @private\r\n   * @param {HTMLElement} targetElement\r\n   * @param {String} event\r\n   * @param {Object} detail\r\n   * @memberof ReOrderableItem\r\n   */\r\n  _dispatchCustomEvent(targetElement, event, detail) {\r\n    targetElement.dispatchEvent(\r\n      // eslint-disable-next-line no-undef\r\n      new CustomEvent(event, {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Checks for overlapping list containers. Will dispatch the following events:\r\n   *  * dragexit - Dispatched when exiting a list container.\r\n   *  * dragenter - Dispatched when entering a list container.\r\n   *  * dragover - Dispatches when the dragged element is moved within the list container.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   * @memberof ReOrderableItem\r\n   */\r\n  _checkOverlappingElements() {\r\n    const list = this._groupListElements\r\n    const previousList = this._overlappingList\r\n\r\n    this._overlappingList = getIntersectingElementOnList(this.draggedElement, [\r\n      ...list\r\n    ])\r\n\r\n    if (previousList && !this._overlappingList) {\r\n      this._dispatchCustomEvent(previousList, 'dragexit', {\r\n        item: this\r\n      })\r\n    }\r\n\r\n    if (!this._overlappingList) {\r\n      if (!document.body.classList.contains(CSS['ui-item-no-drop'])) {\r\n        document.body.classList.add(CSS['ui-item-no-drop'])\r\n      }\r\n      return\r\n    }\r\n\r\n    if (\r\n      !previousList ||\r\n      (previousList && previousList !== this._overlappingList)\r\n    ) {\r\n      if (previousList && previousList !== this._overlappingList) {\r\n        this._dispatchCustomEvent(previousList, 'dragexit', {\r\n          item: this\r\n        })\r\n      }\r\n\r\n      this._dispatchCustomEvent(this._overlappingList, 'dragenter', {\r\n        item: this\r\n      })\r\n      if (document.body.classList.contains(CSS['ui-item-no-drop'])) {\r\n        document.body.classList.remove(CSS['ui-item-no-drop'])\r\n      }\r\n    }\r\n\r\n    this._dispatchCustomEvent(this._overlappingList, 'dragover', {\r\n      item: this\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Mouse move event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableItem\r\n   */\r\n  _onMouseMove = (event) => {\r\n    if (!this._isDragging) return\r\n\r\n    const dragX = event.pageX - this._halfWidth - this._offset.x\r\n    const dragY = event.pageY - this._halfHeight - this._offset.y\r\n\r\n    this.draggedElement.style.left = `${dragX}px`\r\n    this.draggedElement.style.top = `${dragY}px`\r\n\r\n    this._checkOverlappingElements()\r\n\r\n    this.props.onItemDrag?.({\r\n      item: this,\r\n      dragX,\r\n      dragY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Mouse up event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableItem\r\n   */\r\n  _onMouseUp = (event) => {\r\n    if (!this._isDragging) return\r\n\r\n    if (document.body.classList.contains(CSS['ui-item-no-drop'])) {\r\n      document.body.classList.remove(CSS['ui-item-no-drop'])\r\n    }\r\n\r\n    if (this._overlappingList) {\r\n      this._overlappingList.dispatchEvent(\r\n        // eslint-disable-next-line no-undef\r\n        new CustomEvent('drop', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          detail: {\r\n            item: this,\r\n            list: this.listComponent\r\n          }\r\n        })\r\n      )\r\n    }\r\n\r\n    this.props.onItemDragEnd?.({\r\n      item: this,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY\r\n    })\r\n\r\n    this._overlappingList = null\r\n    this._isDragging = false\r\n    if (this._itemRef) {\r\n      this._itemRef.style.display = ''\r\n      this._itemRef.hidden = false\r\n    }\r\n\r\n    this._clonedItem = null\r\n    this._draggedElement?.remove()\r\n    this._draggedElement = null\r\n  }\r\n\r\n  /**\r\n   * Drag start event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableItem\r\n   */\r\n  _onDragStart = (event) => {\r\n    if (this._isDragging) return\r\n\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    this._clonedItem = null\r\n    this._beforeDragRect = this._itemRef.getBoundingClientRect()\r\n    this._groupListElements = document.querySelectorAll(\r\n      `.${this.listComponent.model.groupID}`\r\n    )\r\n\r\n    if (!this._halfWidth && !this._halfHeight) {\r\n      this._halfWidth = this._beforeDragRect.width / 2\r\n      this._halfHeight = this._beforeDragRect.height / 2\r\n    }\r\n\r\n    this._offset = {\r\n      x: event.clientX - this._beforeDragRect.left - this._halfWidth,\r\n      y: event.clientY - this._beforeDragRect.top - this._halfHeight\r\n    }\r\n\r\n    const dragX = event.pageX - this._halfWidth - this._offset.x\r\n    const dragY = event.pageY - this._halfHeight - this._offset.y\r\n\r\n    this._isDragging = true\r\n\r\n    this.draggedElement.style.position = 'absolute'\r\n    this.draggedElement.style.left = `${dragX}px`\r\n    this.draggedElement.style.top = `${dragY}px`\r\n\r\n    document.body.appendChild(this.draggedElement)\r\n\r\n    this._itemRef.style.display = 'none'\r\n    this._itemRef.hidden = true\r\n\r\n    this.props.onItemDragStart?.({\r\n      item: this,\r\n      dragX,\r\n      dragY,\r\n      pageX: event.pageX,\r\n      pageY: event.pageY,\r\n      clientX: event.clientX,\r\n      clientY: event.clientY\r\n    })\r\n\r\n    this._checkOverlappingElements()\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   *\r\n   * @returns {import(\"react\").ReactElement}\r\n   * @memberof ReOrderableItem\r\n   */\r\n  render() {\r\n    const Component = this.props.component\r\n    this._model = new ListItem(this.props)\r\n\r\n    return (\r\n      <Component\r\n        {...this.props.componentProps}\r\n        className={[\r\n          'ui-reorderable-item',\r\n          this.listComponent.instanceID,\r\n          this.model.instanceID,\r\n          this.props.componentProps?.className\r\n        ].join(' ')}\r\n        ref={(ref) => (this._itemRef = ref)}\r\n        onDragStart={this._onDragStart}\r\n        draggable\r\n      >\r\n        {React.Children.only(this.props.children)}\r\n      </Component>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * Returns the value of the property based on the object path.\r\n *\r\n * @export\r\n * @param {String} path Path to the property you want to access.\r\n * @param {Object} object The source object.\r\n * @returns {*}\r\n */\r\nexport function get(path, object) {\r\n  path = path + ''\r\n  const tokens = path.split('.')\r\n  let currentProperty = object\r\n\r\n  for (let i = 0; i < tokens.length; i++) {\r\n    currentProperty = currentProperty[tokens[i]]\r\n  }\r\n  return currentProperty\r\n}\r\n\r\n/**\r\n * Sets the value of the object based on the path.\r\n *\r\n * @export\r\n * @source https://stackoverflow.com/a/10934946\r\n * @param {String} path Path to the property you want to access.\r\n * @param {Object} object The source object.\r\n * @param {*} newValue\r\n */\r\nexport function set(path, object, newValue) {\r\n  path = path + ''\r\n  path = path.split('.')\r\n  while (path.length > 1) object = object[path.shift()]\r\n  return (object[path.shift()] = newValue)\r\n}\r\n","import cryptoRandomString from 'crypto-random-string'\r\nimport { get, set } from '../lib/object'\r\nimport ListItem from './list-item'\r\n\r\n/**\r\n * A model representing our list.\r\n *\r\n * @export\r\n * @class List\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n */\r\nexport default class List {\r\n  static _defaults = {\r\n    name: '',\r\n    list: [],\r\n    path: 0,\r\n    group: null\r\n  }\r\n\r\n  constructor(props) {\r\n    props = { ...List._defaults, ...props }\r\n\r\n    this._name = props.name\r\n    this._list = props.list\r\n    this._path = props.path\r\n    this._group = props.group\r\n    this._listItems = null\r\n    this._groupID = 'list-group-' + props.name.replace(/ /g, '-')\r\n    this._instanceID =\r\n      'list-instance-' +\r\n      (props._instanceID\r\n        ? props._instanceID\r\n        : cryptoRandomString({ length: 8 }))\r\n  }\r\n\r\n  /**\r\n   * Returns the list group that this list is part of. For lists without a group, this will return ```null```.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {null|Array}\r\n   */\r\n  get group() {\r\n    return this._group\r\n  }\r\n\r\n  /**\r\n   * Returns the group id for this list.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {String}\r\n   */\r\n  get groupID() {\r\n    return this._groupID\r\n  }\r\n\r\n  /**\r\n   * Returns the instance id for this reorderable list.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {String}\r\n   */\r\n  get instanceID() {\r\n    return this._instanceID\r\n  }\r\n\r\n  /**\r\n   * Returns the raw array of data found within the list.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {Array}\r\n   */\r\n  get listData() {\r\n    return this._group ? get(this._path, this._group) : this._list\r\n  }\r\n\r\n  /**\r\n   * Returns an array of ```ListItem``` contained within the list.\r\n   *\r\n   * @readonly\r\n   * @memberof List\r\n   */\r\n  get listItems() {\r\n    if (!this._listItems) {\r\n      this._listItems = this.listData.map(\r\n        (data, index) =>\r\n          new ListItem({\r\n            itemData: data,\r\n            itemIndex: index\r\n          })\r\n      )\r\n    }\r\n    return this._listItems\r\n  }\r\n\r\n  /**\r\n   * Returns the object path of this list from the list group. Defaults to ```0``` when this list is ungrouped.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {Number}\r\n   */\r\n  get path() {\r\n    return this._path\r\n  }\r\n\r\n  /**\r\n   * Sets the list group that this list is part of.\r\n   *\r\n   * @public\r\n   * @memberof List\r\n   * @type {null|Array}\r\n   */\r\n  set group(value) {\r\n    this._group = value\r\n  }\r\n\r\n  /**\r\n   * Sets the new value of the list\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof List\r\n   * @type {Array}\r\n   */\r\n  set listData(value) {\r\n    this._group ? set(this._path, this._group, value) : (this._list = value)\r\n    this._listItems = this.listData.map(\r\n      (data, index) =>\r\n        new ListItem({\r\n          itemData: data,\r\n          itemIndex: index\r\n        })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Sets the object path of this list from the list group.\r\n   *\r\n   * @public\r\n   * @memberof List\r\n   * @type {Number}\r\n   */\r\n  set path(value) {\r\n    this._path = value\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport arrayMove from 'array-move'\r\nimport { set } from '../lib/object'\r\nimport List from '../models/list'\r\n\r\n/**\r\n * Controller for managing lists.\r\n *\r\n * @export\r\n * @class ListController\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n */\r\nexport default class ListController {\r\n  /**\r\n   * Creates an instance of ListController.\r\n   * @param {*} props\r\n   * @memberof ListController\r\n   */\r\n  constructor(props) {\r\n    this._model = new List(props)\r\n  }\r\n\r\n  /**\r\n   * Returns the ```List``` model for this controller.\r\n   *\r\n   * @readonly\r\n   * @memberof ListController\r\n   */\r\n  get model() {\r\n    return this._model\r\n  }\r\n\r\n  /**\r\n   * Moves an item to the target index.\r\n   *\r\n   * @param {*} sourceItem\r\n   * @param {*} targetIndex\r\n   * @memberof ListController\r\n   */\r\n  moveItem(sourceItem, targetIndex) {\r\n    let targetList = [...this.model.listData]\r\n    const itemIndex = sourceItem.index\r\n    targetList = arrayMove(targetList, itemIndex, targetIndex)\r\n    let params = [targetList, this.model.path]\r\n    if (this.model.group) {\r\n      const groupCopy = [...this.model.group]\r\n      set(this.model.path, groupCopy, targetList)\r\n      params = [groupCopy]\r\n    }\r\n    return params\r\n  }\r\n\r\n  /**\r\n   * Transfers an item to this list.\r\n   *\r\n   * @param {*} sourceItem\r\n   * @param {*} [sourceList]\r\n   * @param {*} targetIndex\r\n   * @memberof ListController\r\n   */\r\n  transferItem(sourceItem, sourceList, targetIndex) {\r\n    let targetList = [...this.model.listData]\r\n    const itemData = sourceItem.data\r\n    const itemIndex = sourceItem.index\r\n\r\n    const sourceListPath = sourceList.path\r\n    // make a copy of the group\r\n    const groupCopy = [...this.model.group]\r\n    // remove the source item from its list\r\n    const sourceListData = sourceList.listData.filter(\r\n      (item, index) => index !== itemIndex\r\n    )\r\n    // add the item to the new list\r\n    targetList.push(itemData)\r\n    // move the newly added item to the target index\r\n    targetList = arrayMove(targetList, targetList.length - 1, targetIndex)\r\n    // set the new source and target list\r\n    set(sourceListPath, groupCopy, sourceListData)\r\n    set(this.model.path, groupCopy, targetList)\r\n\r\n    // return the group\r\n    return [groupCopy]\r\n  }\r\n\r\n  /**\r\n   * Transfers an item from one list to another or reorders the items if the ```sourceList``` is null.\r\n   *\r\n   * @param {ListItem} sourceItem\r\n   * @param {Number} targetIndex\r\n   * @param {List} sourceList\r\n   * @memberof ListController\r\n   */\r\n  updateList(sourceItem, sourceList, targetIndex) {\r\n    sourceList = !sourceList ? this.model : sourceList\r\n    if (this.model.instanceID === sourceList.instanceID) {\r\n      return this.moveItem(sourceItem, targetIndex)\r\n    }\r\n    return this.transferItem(sourceItem, sourceList, targetIndex)\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport isEmpty from 'is-empty'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component, ReactElement } from 'react'\r\nimport {\r\n  JSXToDOMElement,\r\n  getClosestElement,\r\n  insertAfter,\r\n  insertBefore\r\n} from '../lib/dom'\r\nimport ReOrderableItem from './reorderable-item'\r\nimport ListController from '../controllers/list-controller'\r\n\r\n/**\r\n * A container for reorderable list items. This contains the main logic for reordering and updating items.\r\n *\r\n * @class ReOrderableList\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n * @extends {Component}\r\n */\r\nexport default class ReOrderableList extends Component {\r\n  /**\r\n   * Define prop types.\r\n   *\r\n   * @static\r\n   * @memberof ReOrderableList\r\n   */\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    list: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n      PropTypes.object\r\n    ]).isRequired,\r\n    componentProps: PropTypes.object,\r\n    orientation: PropTypes.oneOf(['vertical', 'horizontal']).isRequired,\r\n    placeholder: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Object),\r\n      PropTypes.instanceOf(ReactElement)\r\n    ]).isRequired,\r\n    group: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n  }\r\n\r\n  /**\r\n   * Default properties for this component.\r\n   *\r\n   * @static\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  static defaultProps = {\r\n    name: '',\r\n    component: `div`,\r\n    list: [],\r\n    path: 0,\r\n    group: null,\r\n    orientation: 'vertical',\r\n    placeholder: (item) => {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: `${item.rect.width}px`,\r\n            height: `${item.rect.height}px`,\r\n            backgroundColor: 'rgba(0, 0, 0, 0.1)'\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Contains the currently dragged item.\r\n   *\r\n   * @static\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   * @type {ReOrderableItem}\r\n   */\r\n  static _currentDraggedItem = null\r\n\r\n  /**\r\n   * Settings for list orientation.\r\n   *\r\n   * @static\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  static _orientationSettings = {\r\n    vertical: {\r\n      axis: 'y',\r\n      size: 'height'\r\n    },\r\n    horizontal: {\r\n      axis: 'x',\r\n      size: 'width'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of ReOrderableList.\r\n   *\r\n   * @param {*} props\r\n   * @memberof ReOrderableList\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this._itemPlaceholder = null\r\n    this._controller = new ListController(props)\r\n  }\r\n\r\n  /**\r\n   * Returns the instance id for this list.\r\n   *\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get instanceID() {\r\n    return this.controller.model.instanceID\r\n  }\r\n\r\n  /**\r\n   * Returns the group id for this list.\r\n   *\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get groupID() {\r\n    return this.controller.model.groupID\r\n  }\r\n\r\n  /**\r\n   * Returns the controller for this component.\r\n   *\r\n   * @type {ListController}\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get controller() {\r\n    return this._controller\r\n  }\r\n\r\n  /**\r\n   * Returns the model for this component.\r\n   *\r\n   * @type {List}\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   */\r\n  get model() {\r\n    return this._controller.model\r\n  }\r\n\r\n  /**\r\n   * Returns the HTMLElement of the list.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {HTMLElement}\r\n   */\r\n  get element() {\r\n    return this._listRef\r\n  }\r\n\r\n  /**\r\n   * Returns the currently dragged item.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {ReOrderableItem}\r\n   */\r\n  get currentDraggedItem() {\r\n    return ReOrderableList._currentDraggedItem\r\n  }\r\n\r\n  /**\r\n   * Returns the item placeholder.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {HTMLElement}\r\n   */\r\n  get itemPlaceholder() {\r\n    if (!this._itemPlaceholder) {\r\n      const element = this.props.placeholder?.(this.currentDraggedItem)\r\n      this._itemPlaceholder = React.isValidElement(element)\r\n        ? JSXToDOMElement(element)\r\n        : element\r\n\r\n      if (!this._itemPlaceholder.classList.contains('ui-reorderable-item')) {\r\n        this._itemPlaceholder.classList.add('ui-reorderable-item')\r\n      }\r\n      if (!this._itemPlaceholder.classList.contains('item-placeholder')) {\r\n        this._itemPlaceholder.classList.add('item-placeholder')\r\n      }\r\n    }\r\n    return this._itemPlaceholder\r\n  }\r\n\r\n  /**\r\n   * Returns the orientation settings.\r\n   *\r\n   * @public\r\n   * @readonly\r\n   * @memberof ReOrderableList\r\n   * @type {Object}\r\n   */\r\n  get orientationSettings() {\r\n    return ReOrderableList._orientationSettings[this.props.orientation]\r\n  }\r\n\r\n  /**\r\n   * Initializes the children. Only looks for instances of ```ReOrderableItem``` and passes props to each instance.\r\n   *\r\n   * @private\r\n   * @returns\r\n   * @memberof ReOrderableList\r\n   * @returns {Array<import(\"react\").ReactElement>}\r\n   */\r\n  _initializeChildren() {\r\n    let index = 0\r\n    const childrenWithProps = React.Children.map(\r\n      this.props.children,\r\n      (child) => {\r\n        if (React.isValidElement(child) && child.type === ReOrderableItem) {\r\n          const props = {\r\n            list: this,\r\n            onItemDragStart: (item) => {\r\n              this._onItemDragStart(item)\r\n              if (child.props.onItemDragStart) {\r\n                child.props.onItemDragStart(item)\r\n              }\r\n            },\r\n            onItemDragEnd: (item) => {\r\n              this._onItemDragEnd(item)\r\n              if (child.props.onItemDragEnd) {\r\n                child.props.onItemDragEnd(item)\r\n              }\r\n            },\r\n            itemData: isEmpty(child.props.itemData)\r\n              ? this.model.listData[index]\r\n              : child.props.itemData,\r\n            itemIndex: isEmpty(child.props.itemIndex)\r\n              ? index\r\n              : child.props.itemIndex\r\n          }\r\n          index++\r\n          return React.cloneElement(child, props)\r\n        }\r\n        return child\r\n      }\r\n    )\r\n\r\n    return childrenWithProps\r\n  }\r\n\r\n  /**\r\n   * Updates the list with the new ```ReOrderableItem```.\r\n   *\r\n   * @private\r\n   * @param {ReOrderableItem} item\r\n   * @param {Number} targetIndex\r\n   * @memberof ReOrderableList\r\n   */\r\n  _updateList(item, targetIndex) {\r\n    const params = this.controller.updateList(\r\n      item.model,\r\n      item.listComponent.model,\r\n      targetIndex\r\n    )\r\n    this.props.onListUpdate?.apply(this, params)\r\n  }\r\n\r\n  /**\r\n   * Initializes drag data.\r\n   *\r\n   * @private\r\n   * @param {ReOrderableItem} item\r\n   * @memberof ReOrderableList\r\n   */\r\n  _initDragData(item) {\r\n    ReOrderableList._currentDraggedItem = item\r\n  }\r\n\r\n  /**\r\n   * Resets the drag data.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _resetDragData() {\r\n    ReOrderableList._currentDraggedItem = null\r\n    this._removePlaceholders()\r\n    this._itemPlaceholder = null\r\n  }\r\n\r\n  /**\r\n   * Removes all placeholders from every list container.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _removePlaceholders() {\r\n    const placeholder = document.querySelector(\r\n      '.ui-reorderable-list .ui-reorderable-item.item-placeholder'\r\n    )\r\n    placeholder?.remove()\r\n  }\r\n\r\n  /**\r\n   * Item drag start event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onItemDragStart = ({ item }) => {\r\n    this._initDragData(item)\r\n  }\r\n\r\n  /**\r\n   * Item drag end event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onItemDragEnd = () => {\r\n    this._resetDragData()\r\n  }\r\n\r\n  /**\r\n   * Drag exit event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDragExit = () => {\r\n    this._removePlaceholders()\r\n  }\r\n\r\n  /**\r\n   * Drag over event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDragOver = (event) => {\r\n    const { item } = event.detail\r\n    event.stopPropagation()\r\n    this.itemPlaceholder?.remove()\r\n\r\n    const filteredItems = [\r\n      ...this.element.querySelectorAll(\r\n        `.ui-reorderable-item.${this.instanceID}:not([hidden])`\r\n      )\r\n    ]\r\n\r\n    if (filteredItems.length <= 0) {\r\n      this.element.appendChild(this.itemPlaceholder)\r\n      return\r\n    }\r\n\r\n    const closestElement = getClosestElement(filteredItems, item.draggedElement)\r\n\r\n    const closestElementRect = closestElement.getBoundingClientRect()\r\n    const draggedElementRect = item.draggedElement.getBoundingClientRect()\r\n    const draggedElementAxis = Math.floor(\r\n      draggedElementRect[this.orientationSettings.axis]\r\n    )\r\n    const closestRectYAxis = Math.floor(\r\n      closestElementRect[this.orientationSettings.axis] +\r\n        closestElementRect[this.orientationSettings.size] / 2\r\n    )\r\n    const insertFunction =\r\n      closestRectYAxis > draggedElementAxis ? insertBefore : insertAfter\r\n    insertFunction(this.element, closestElement, this.itemPlaceholder)\r\n  }\r\n\r\n  /**\r\n   * Drop event handler.\r\n   *\r\n   * @private\r\n   * @memberof ReOrderableList\r\n   */\r\n  _onDrop = (event) => {\r\n    const { item } = event.detail\r\n    event.stopPropagation()\r\n\r\n    const filteredItems = [\r\n      ...this.element.querySelectorAll(`.ui-reorderable-item:not([hidden])`)\r\n    ]\r\n\r\n    const index = filteredItems.findIndex((item) =>\r\n      item.classList.contains('item-placeholder')\r\n    )\r\n\r\n    this._updateList(item, index)\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   *\r\n   * @returns {import(\"react\").ReactElement}\r\n   * @memberof ReOrderableList\r\n   */\r\n  render() {\r\n    const CustomComponent = this.props.component\r\n    this._controller = new ListController(this.props)\r\n\r\n    return (\r\n      <CustomComponent\r\n        {...this.props.componentProps}\r\n        ref={(ref) => (this._listRef = ref)}\r\n        className={[\r\n          'ui-reorderable-list',\r\n          this.instanceID,\r\n          this.groupID,\r\n          this.props.componentProps?.className\r\n        ].join(' ')}\r\n        onDrop={this._onDrop}\r\n        onDragOver={this._onDragOver}\r\n        onDragExit={this._onDragExit}\r\n      >\r\n        {this._initializeChildren()}\r\n      </CustomComponent>\r\n    )\r\n  }\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\nimport React, { Component } from 'react'\r\nimport { get, set } from '../lib/object'\r\nimport isEmpty from 'is-empty'\r\nimport ReOrderableList from './reorderable-list'\r\n\r\n/**\r\n * A wrapper for several interacting ```ReOrderableList``` components.\r\n *\r\n * @class ReOrderableListGroup\r\n * @author Ezequiel Sam Ceracas\r\n * @version 1.0.0\r\n * @extends {Component}\r\n */\r\nexport default class ReOrderableListGroup extends Component {\r\n  static defaultProps = {\r\n    name: 'list',\r\n    listGroup: []\r\n  }\r\n\r\n  /**\r\n   * List update handler.\r\n   *\r\n   * @memberof ReOrderableListGroup\r\n   */\r\n  _onListUpdate = (newList, path) => {\r\n    const listCopy = [...this.props.group]\r\n    set(path, listCopy, newList)\r\n    this.props.onListGroupUpdate?.(listCopy)\r\n  }\r\n\r\n  /**\r\n   * Initializes the children. Only detects ```ReOrderableList``` components and passes special properties to them.\r\n   *\r\n   * @private\r\n   * @returns {Array<ReactElement>}\r\n   * @memberof ReOrderableListGroup\r\n   */\r\n  _initializeChildren() {\r\n    let index = 0\r\n    const childrenWithProps = React.Children.map(\r\n      this.props.children,\r\n      (child) => {\r\n        if (React.isValidElement(child) && child.type === ReOrderableList) {\r\n          const props = {\r\n            name: this.props.name,\r\n            list: isEmpty(child.props.list)\r\n              ? get(index, this.props.group)\r\n              : child.props.list,\r\n            path: isEmpty(child.props.path) ? index : child.props.path,\r\n            onListUpdate: this._onListUpdate,\r\n            group: this.props.group\r\n          }\r\n          index++\r\n          return React.cloneElement(child, props)\r\n        }\r\n        return child\r\n      }\r\n    )\r\n    return childrenWithProps\r\n  }\r\n\r\n  /**\r\n   * Renders the component.\r\n   *\r\n   * @returns {import(\"react\").ReactElement}\r\n   * @memberof ReOrderableListGroup\r\n   */\r\n  render() {\r\n    return <React.Fragment>{this._initializeChildren()}</React.Fragment>\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  ReOrderableItem,\r\n  ReOrderableList,\r\n  ReOrderableListGroup\r\n} from 'react-reorderable-list'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport { Box } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid gray'\r\n  }\r\n}))\r\n\r\nexport default function () {\r\n  const classes = useStyles()\r\n  //sample data\r\n  const [groups, setGroup] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'test',\r\n      tasks: [\r\n        { id: 1, name: 'Test' },\r\n        { id: 2, name: 'Hello' },\r\n        { id: 3, name: 'World!' }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'test2',\r\n      tasks: [\r\n        { id: 1, name: 'Item' },\r\n        { id: 2, name: 'Name' }\r\n      ]\r\n    }\r\n  ])\r\n  return (\r\n    <>\r\n      {' '}\r\n      <h4>\r\n        Using the{' '}\r\n        <a\r\n          href='https://material-ui.com/components/lists/'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          List\r\n        </a>{' '}\r\n        component\r\n      </h4>\r\n      <Box display='flex' gridGap='10px'>\r\n        <ReOrderableListGroup\r\n          name='uniqueGroupName'\r\n          group={groups}\r\n          onListGroupUpdate={(newList) => setGroup(newList)}\r\n        >\r\n          {groups.map((list, index) => (\r\n            <ReOrderableList\r\n              key={`list-${index}`}\r\n              path={`${index}.tasks`}\r\n              component={List}\r\n              componentProps={{\r\n                className: classes.root\r\n              }}\r\n            >\r\n              {list.tasks.map((data, index) => (\r\n                <ReOrderableItem key={`item-${index}`} component={ListItem}>\r\n                  <ListItemText primary={data.name} />\r\n                </ReOrderableItem>\r\n              ))}\r\n            </ReOrderableList>\r\n          ))}\r\n        </ReOrderableListGroup>\r\n      </Box>\r\n      <Accordion>\r\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\r\n          Show source\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Box width='100%'>\r\n            <SyntaxHighlighter\r\n              language='jsx'\r\n              style={materialDark}\r\n              customStyle={{ display: 'block' }}\r\n            >\r\n              {`import React, { useState } from \"react\";\r\nimport {\r\n   ReOrderableItem,\r\n   ReOrderableList,\r\n   ReOrderableListGroup,\r\n} from \"react-reorderable-list\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid gray\",\r\n   },\r\n}));\r\nexport default function () {\r\n   const classes = useStyles();\r\n   const [groups, setGroup] = useState([\r\n      {\r\n         id: 1,\r\n         name: \"test\",\r\n         tasks: [\r\n            { id: 1, name: \"Test\" },\r\n            { id: 2, name: \"Hello\" },\r\n            { id: 3, name: \"World!\" },\r\n         ],\r\n      },\r\n      {\r\n         id: 2,\r\n         name: \"test2\",\r\n         tasks: [\r\n            { id: 1, name: \"Item\" },\r\n            { id: 2, name: \"Name\" },\r\n         ],\r\n      },\r\n   ]);\r\n   return (\r\n      <Box display=\"flex\" gridGap=\"10px\">\r\n         <ReOrderableListGroup\r\n            name=\"uniqueGroupName\"\r\n            group={groups}\r\n            onListGroupUpdate={(newList) => setGroup(newList)}>\r\n            {groups.map((list, index) => (\r\n               <ReOrderableList\r\n                  key={\\`list-\\${index}\\`}\r\n                  path={\\`\\${index}.tasks\\`}\r\n                  component={List}\r\n                  componentProps={{\r\n                     className: classes.root,\r\n                  }}>\r\n                  {list.tasks.map((data, index) => (\r\n                     <ReOrderableItem\r\n                        key={\\`item-\\${index}\\`}\r\n                        component={ListItem}>\r\n                        <ListItemText primary={data.name} />\r\n                     </ReOrderableItem>\r\n                  ))}\r\n               </ReOrderableList>\r\n            ))}\r\n         </ReOrderableListGroup>\r\n      </Box>\r\n   );\r\n}\r\n`}\r\n            </SyntaxHighlighter>\r\n          </Box>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport { Box, ListSubheader } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid gray'\r\n  }\r\n}))\r\n\r\nexport default function () {\r\n  const classes = useStyles()\r\n\r\n  const [todo, setTodo] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'In Progress',\r\n      tasks: [\r\n        { id: 1, name: 'This task is in progress.' },\r\n        { id: 2, name: 'This one too.' },\r\n        { id: 3, name: 'Hello World!' }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Complete',\r\n      tasks: [\r\n        { id: 1, name: 'This task is completed.' },\r\n        { id: 2, name: 'Im a task!' }\r\n      ]\r\n    }\r\n  ])\r\n  return (\r\n    <>\r\n      <h4>Nested Lists</h4>\r\n\r\n      <ReOrderableList\r\n        name='categories'\r\n        list={todo}\r\n        orientation='horizontal'\r\n        onListUpdate={(newList) => setTodo(newList)}\r\n        component={Box}\r\n        componentProps={{\r\n          style: { display: 'flex', gap: '20px' }\r\n        }}\r\n      >\r\n        {todo.map((list, index) => {\r\n          return (\r\n            <ReOrderableItem\r\n              key={`cat-${index}`}\r\n              componentProps={{ className: classes.root }}\r\n            >\r\n              <ReOrderableList\r\n                name='todo-list'\r\n                group={todo}\r\n                path={`${index}.tasks`}\r\n                onListUpdate={(newList) => setTodo(newList)}\r\n                component={List}\r\n                componentProps={{\r\n                  subheader: (\r\n                    <ListSubheader component='div' id='nested-list-subheader'>\r\n                      {list.name}\r\n                    </ListSubheader>\r\n                  )\r\n                }}\r\n              >\r\n                {list.tasks.map((data, index) => (\r\n                  <ReOrderableItem key={`item-${index}`} component={ListItem}>\r\n                    <ListItemText primary={data.name} />\r\n                  </ReOrderableItem>\r\n                ))}\r\n              </ReOrderableList>\r\n            </ReOrderableItem>\r\n          )\r\n        })}\r\n      </ReOrderableList>\r\n\r\n      <Accordion>\r\n        <AccordionSummary aria-controls='panel2a-content' id='panel2a-header'>\r\n          Show source\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Box width='100%'>\r\n            <SyntaxHighlighter\r\n              language='jsx'\r\n              style={materialDark}\r\n              customStyle={{ display: 'block' }}\r\n            >\r\n              {`import React, { useState } from \"react\";\r\nimport { ReOrderableItem, ReOrderableList } from \"react-reorderable-list\";\r\nimport { Box, ListSubheader } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid gray\",\r\n   },\r\n}));\r\nexport default function () {\r\n   const classes = useStyles();\r\n   const [todo, setTodo] = useState([\r\n      {\r\n         id: 1,\r\n         name: \"In Progress\",\r\n         tasks: [\r\n            { id: 1, name: \"This task is in progress.\" },\r\n            { id: 2, name: \"This one too.\" },\r\n            { id: 3, name: \"Hello World!\" },\r\n         ],\r\n      },\r\n      {\r\n         id: 2,\r\n         name: \"Complete\",\r\n         tasks: [\r\n            { id: 1, name: \"This task is completed.\" },\r\n            { id: 2, name: \"Im a task!\" },\r\n         ],\r\n      },\r\n   ]);\r\n   return (\r\n      <ReOrderableList\r\n         name=\"categories\"\r\n         list={todo}\r\n         orientation=\"horizontal\"\r\n         onListUpdate={(newList) => setTodo(newList)}\r\n         component={Box}\r\n         componentProps={{\r\n            style: { display: \"flex\", gap: \"20px\" },\r\n         }}>\r\n         {todo.map((list, index) => {\r\n            return (\r\n               <ReOrderableItem\r\n                  key={\\`cat-\\${index}\\`}\r\n                  componentProps={{ className: classes.root }}>\r\n                  <ReOrderableList\r\n                     name=\"todo-list\"\r\n                     group={todo}\r\n                     path={\\`\\${index}.tasks\\`}\r\n                     onListUpdate={(newList) => setTodo(newList)}\r\n                     component={List}\r\n                     componentProps={{\r\n                        subheader: (\r\n                           <ListSubheader\r\n                              component=\"div\"\r\n                              id=\"nested-list-subheader\">\r\n                              {list.name}\r\n                           </ListSubheader>\r\n                        ),\r\n                     }}>\r\n                     {list.tasks.map((data, index) => (\r\n                        <ReOrderableItem\r\n                           key={\\`item-\\${index}\\`}\r\n                           component={ListItem}>\r\n                           <ListItemText primary={data.name} />\r\n                        </ReOrderableItem>\r\n                     ))}\r\n                  </ReOrderableList>\r\n               </ReOrderableItem>\r\n            );\r\n         })}\r\n      </ReOrderableList>\r\n   );\r\n}\r\n`}\r\n            </SyntaxHighlighter>\r\n          </Box>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ReOrderableItem, ReOrderableList } from 'react-reorderable-list'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport { Box } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport { materialDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid gray'\r\n  }\r\n}))\r\nexport default function () {\r\n  const classes = useStyles()\r\n  //sample data\r\n  const [list, setList] = useState([\r\n    { id: 1, name: 'This' },\r\n    { id: 2, name: 'list' },\r\n    { id: 2, name: 'is restricted' },\r\n    { id: 2, name: 'to itself' }\r\n  ])\r\n  return (\r\n    <>\r\n      {' '}\r\n      <h4>\r\n        Ungroupped List\r\n      </h4>\r\n      <Box display='flex' gridGap='10px'>\r\n        <ReOrderableList\r\n          //The unique identifier for this list. Should be unique from other lists and list groups.\r\n          name='list2'\r\n          //your list data\r\n          list={list}\r\n          //the list update callback\r\n          onListUpdate={(newList) => setList(newList)}\r\n          component={List}\r\n          componentProps={{\r\n            className: classes.root\r\n          }}\r\n        >\r\n          {list.map((data, index) => (\r\n            <ReOrderableItem key={`item-${index}`} component={ListItem}>\r\n              <ListItemText primary={data.name} />\r\n            </ReOrderableItem>\r\n          ))}\r\n        </ReOrderableList>\r\n      </Box>\r\n      <Accordion>\r\n        <AccordionSummary aria-controls='panel1a-content' id='panel1a-header'>\r\n          Show source\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Box width='100%'>\r\n            <SyntaxHighlighter\r\n              language='jsx'\r\n              style={materialDark}\r\n              customStyle={{ display: 'block' }}\r\n            >\r\n              {`import React, { useState } from \"react\";\r\nimport { ReOrderableItem, ReOrderableList } from \"react-reorderable-list\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"1px solid gray\",\r\n   },\r\n}));\r\nexport default function () {\r\n   const classes = useStyles();\r\n   const [list, setList] = useState([\r\n      { id: 1, name: \"This\" },\r\n      { id: 2, name: \"list\" },\r\n      { id: 2, name: \"is restricted\" },\r\n      { id: 2, name: \"to itself\" },\r\n   ]);\r\n   return (\r\n      <Box display=\"flex\" gridGap=\"10px\">\r\n         <ReOrderableList\r\n            //The unique identifier for this list. Should be unique from other lists and list groups.\r\n            name=\"list2\"\r\n            //your list data\r\n            list={list}\r\n            //the list update callback\r\n            onListUpdate={(newList) => setList(newList)}\r\n            component={List}\r\n            componentProps={{\r\n               className: classes.root,\r\n            }}>\r\n            {list.map((data, index) => (\r\n               <ReOrderableItem key={\\`item-\\${index}\\`} component={ListItem}>\r\n                  <ListItemText primary={data.name} />\r\n               </ReOrderableItem>\r\n            ))}\r\n         </ReOrderableList>\r\n      </Box>\r\n   );\r\n}\r\n`}\r\n            </SyntaxHighlighter>\r\n          </Box>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Box, Container, Divider } from '@material-ui/core'\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx'\r\nimport UsingLists from './samples/using-lists'\r\nimport NestedLists from './samples/nested-lists'\r\nimport UsingUngrouppedList from './samples/using-ungroupped-list'\r\nimport 'react-reorderable-list/dist/index.css'\r\n\r\nSyntaxHighlighter.registerLanguage('jsx', jsx)\r\n\r\nexport default function () {\r\n  let history = useHistory()\r\n  const homeClick = () => {\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Button color='inherit' onClick={homeClick}>\r\n            Home\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container>\r\n        <Box my={3}>\r\n          <Box my={3}>\r\n            <Divider light style={{ margin: '5px 0' }} />\r\n\r\n            <UsingLists />\r\n\r\n            <Divider style={{ margin: '25px 0' }} />\r\n\r\n            <NestedLists />\r\n\r\n            <Divider style={{ margin: '25px 0' }} />\r\n\r\n            <UsingUngrouppedList />\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function(props) {\r\n    return <></>\r\n}","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport ReactBoostrap from './pages/react-bootstrap';\r\nimport MaterialUI from './pages/material-ui';\r\nimport AntDesign from './pages/ant-design';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/react-bootstrap'>\r\n          <ReactBoostrap />\r\n        </Route>\r\n        <Route path='/material-ui'>\r\n          <MaterialUI />\r\n        </Route>\r\n        <Route path='/ant-design'>\r\n          <AntDesign />\r\n        </Route>\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}